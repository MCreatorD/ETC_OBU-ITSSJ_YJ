A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     1


MACRO ASSEMBLER A51 V8.00d
OBJECT MODULE PLACED IN ProCard.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE ProCard.asm SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;******************************************************************
                       2     ;ÃèÊö£ºPRO¿¨Æ¬²Ù×÷À©Õ¹³ÌÐò¼¯
                       3     ;_FUN_ProCard_RXBYTE            ---     Pro¿¨½ÓÊÕµ¥¸ö×Ö½ÚµÄÊ¾Ý
                       4     ;_FUN_ProCard_RXPro             ---     Pro¿¨½ÓÊÕÊ¾Ý
                       5     ;_FUN_ProCard_TXBYTE            ---     Pro¿¨·¢ËÍµ¥¸ö×Ö½ÚµÄÊ¾Ý
                       6     ;_FUN_ProCard_TXPro             ---     Pro¿¨·¢ËÍÊ¾Ý
                       7     ;_FUN_ProCard_Channel           ---     Pro¿¨Í¨µÀ²Ù×÷º¯Ê
                       8     ;******************************************************************
                       9     NAME    ProCard
                      10             
                      11     ;$include (COMMON.INC)
                +1    12             
  009C          +1    13     BRT                                     EQU     09CH
  009C          +1    14     Reg_Sys_BRT                             EQU     09CH
                +1    15     ;RegBit_SysBRT_S1BRS                    BIT     Reg_Sys_BRT.1
                +1    16     
  009A          +1    17     S2CON                                   EQU     09AH
  009B          +1    18     S2BUF                                   EQU     09BH
  00AF          +1    19     IE2                                     EQU     0AFH
  00EA          +1    20     RELOAD2_CONTR                           EQU     0EAH
                +1    21             
  0001          +1    22     CONST_TIMEER02                          EQU     1       ;Ò»ÖÜ6Ãë
  00FE          +1    23     CONST_TIMEER03                          EQU     254;245
  0001          +1    24     CONST_TIMEER04                          EQU     1
                +1    25     
  00A2          +1    26     REG_51_AUXR1                            EQU     0A2H
  00AE          +1    27     EPCAI                                   BIT     IE.6
                +1    28     ;//////////////////////////////////////////////////////////////////////////////////////////
                             ///////
                +1    29     ;NEW LCD
                +1    30     ;PIN_Sys_IsDownload                     BIT     P3.7
                +1    31     ;PIN_LCD_OLEDD1                         BIT     P1.2
                +1    32     ;PIN_LCD_OLEDD0                         BIT     P1.3
                +1    33     ;PIN_LCD_OLEDDC                         BIT     P1.4
                +1    34     ;PIN_LCD_OLEDRES                        BIT     P1.5
                +1    35     ;PIN_LCD_OLEDCS                         BIT     P4.3
                +1    36     ;PIN_LCD_BG                             BIT     P1.1
                +1    37     ;PIN_OLED_ENSY7208                      BIT     P4.0
  00C0          +1    38     P4                                      EQU     0C0H
                +1    39     ;------------------------------------------------------------------------------------------
                             -----
  0005          +1    40     CONST_MAX_RXNUM                         EQU     5
                +1    41     ;TI_CCxxx0_SRES                         EQU     30H
                +1    42     ;Configuration Registers                
  0046          +1    43     CONST_GDO2_VALUE                        EQU     46h;046H        ;06H
  0002          +1    44     CONST_GDO2_MCSM2                        EQU     2;03H
  00C0          +1    45     read_burst                              EQU     0C0H
  0000          +1    46     TI_CCxxx0_IOCFG2                        EQU     00H        ;GDO2 output pin configuration
  0001          +1    47     TI_CCxxx0_IOCFG1                        EQU     01H        ;GDO1 output pin configuration
  0002          +1    48     TI_CCxxx0_IOCFG0                        EQU     02H        ;GDO0 output pin configuration
  0003          +1    49     TI_CCxxx0_FIFOTHR                       EQU     03H        ;RX FIFO and TX FIFO thresholds
  0004          +1    50     TI_CCxxx0_SYNC1                         EQU     04H        ;Sync word, high byte
  0005          +1    51     TI_CCxxx0_SYNC0                         EQU     05H        ;Sync word, low byte
  0006          +1    52     TI_CCxxx0_PKTLEN                        EQU     06H        ;Packet length
  0007          +1    53     TI_CCxxx0_PKTCTRL1                      EQU     07H        ;Packet automation control
  0008          +1    54     TI_CCxxx0_PKTCTRL0                      EQU     08H        ;Packet automation control
  0009          +1    55     TI_CCxxx0_ADDR                          EQU     09H        ;Device address
  000A          +1    56     TI_CCxxx0_CHANNR                        EQU     0AH        ;Channel number
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     2

  000B          +1    57     TI_CCxxx0_FSCTRL1                       EQU     0BH        ;Frequency synthesizer control
  000C          +1    58     TI_CCxxx0_FSCTRL0                       EQU     0CH        ;Frequency synthesizer control
  000D          +1    59     TI_CCxxx0_FREQ2                         EQU     0DH        ;Frequency control word, high by
                             te
  000E          +1    60     TI_CCxxx0_FREQ1                         EQU     0EH        ;Frequency control word, middle 
                             byte
  000F          +1    61     TI_CCxxx0_FREQ0                         EQU     0FH        ;Frequency control word, low byt
                             e
  0010          +1    62     TI_CCxxx0_MDMCFG4                       EQU     10H        ;Modem configuration
  0011          +1    63     TI_CCxxx0_MDMCFG3                       EQU     11H        ;Modem configuration
  0012          +1    64     TI_CCxxx0_MDMCFG2                       EQU     12H        ;Modem configuration
  0013          +1    65     TI_CCxxx0_MDMCFG1                       EQU     13H        ;Modem configuration
  0014          +1    66     TI_CCxxx0_MDMCFG0                       EQU     14H        ;Modem configuration
  0015          +1    67     TI_CCxxx0_DEVIATN                       EQU     15H        ;Modem deviation setting
  0016          +1    68     TI_CCxxx0_MCSM2         EQU     16H        ;Main Radio Cntrl State Machine config
  0017          +1    69     TI_CCxxx0_MCSM1         EQU     17H        ;Main Radio Cntrl State Machine config
  0018          +1    70     TI_CCxxx0_MCSM0         EQU     18H        ;Main Radio Cntrl State Machine config
  0019          +1    71     TI_CCxxx0_FOCCFG        EQU     19H        ;Frequency Offset Compensation config
  001A          +1    72     TI_CCxxx0_BSCFG         EQU     1AH        ;Bit Synchronization configuration
  001B          +1    73     TI_CCxxx0_AGCCTRL2      EQU     1BH        ;AGC control
  001C          +1    74     TI_CCxxx0_AGCCTRL1      EQU     1CH        ;AGC control
  001D          +1    75     TI_CCxxx0_AGCCTRL0      EQU     1DH        ;AGC control
  001E          +1    76     TI_CCxxx0_WOREVT1       EQU     1EH        ;High byte Event 0 timeout
  001F          +1    77     TI_CCxxx0_WOREVT0       EQU     1FH        ;Low byte Event 0 timeout
  0020          +1    78     TI_CCxxx0_WORCTRL       EQU     20H        ;Wake On Radio control
  0021          +1    79     TI_CCxxx0_FREND1        EQU     21H        ;Front end RX configuration
  0022          +1    80     TI_CCxxx0_FREND0        EQU     22H        ;Front end TX configuration
  0023          +1    81     TI_CCxxx0_FSCAL3        EQU     23H        ;Frequency synthesizer calibration
  0024          +1    82     TI_CCxxx0_FSCAL2        EQU     24H        ;Frequency synthesizer calibration
  0025          +1    83     TI_CCxxx0_FSCAL1        EQU     25H        ;Frequency synthesizer calibration
  0026          +1    84     TI_CCxxx0_FSCAL0        EQU     26H        ;Frequency synthesizer calibration
  0027          +1    85     TI_CCxxx0_RCCTRL1       EQU     27H        ;RC oscillator configuration
  0028          +1    86     TI_CCxxx0_RCCTRL0       EQU     28H        ;RC oscillator configuration
  0029          +1    87     TI_CCxxx0_FSTEST        EQU     29H        ;Frequency synthesizer cal control
  002A          +1    88     TI_CCxxx0_PTEST         EQU     2AH        ;Production test
  002B          +1    89     TI_CCxxx0_AGCTEST       EQU     2BH        ;AGC test
  002C          +1    90     TI_CCxxx0_TEST2         EQU     2CH        ;Various test settings       
  002D          +1    91     TI_CCxxx0_TEST1         EQU     2DH        ;Various test settings
  002E          +1    92     TI_CCxxx0_TEST0         EQU     2EH        ;Various test settings
                +1    93     
                +1    94     ;Strobe commands
  0030          +1    95     TI_CCxxx0_SRES          EQU     30H        ;Reset chip.
  0032          +1    96     TI_CCxxx0_SXOFF         EQU     32H        ;Turn off crystal oscillator.
  0033          +1    97     TI_CCxxx0_SCAL          EQU     33H        ;Calibrate freq synthesizer & disable
  0034          +1    98     TI_CCxxx0_SRX           EQU     34H        ;Enable RX.
  0035          +1    99     TI_CCxxx0_STX           EQU     35H        ;Enable TX.
  0036          +1   100     TI_CCxxx0_SIDLE         EQU     36H        ;Exit RX / TX
  0037          +1   101     TI_CCxxx0_SAFC          EQU     37H        ;AFC adjustment of freq synthesizer
  0038          +1   102     TI_CCxxx0_SWOR          EQU     38H        ;Start automatic RX polling sequence
  0039          +1   103     TI_CCxxx0_SPWD          EQU     39H        ;Enter pwr down mode when CSn goes hi
  003A          +1   104     TI_CCxxx0_SFRX          EQU     3AH        ;Flush the RX FIFO buffer.
  003B          +1   105     TI_CCxxx0_SFTX          EQU     3BH        ;Flush the TX FIFO buffer.
  003C          +1   106     TI_CCxxx0_SWORRST       EQU     3CH        ;Reset real time clock.
  003D          +1   107     TI_CCxxx0_SNOP          EQU     3DH        ;No operation.
                +1   108             
                +1   109     ;Status_registers
  0030          +1   110     TI_CCxxx0_PARTNUM                       EQU     30H        ;Part number
  0031          +1   111     TI_CCxxx0_VERSION                       EQU     31H        ;Current version number
  0032          +1   112     TI_CCxxx0_FREQEST                       EQU     32H        ;Frequency offset estimate
  0033          +1   113     TI_CCxxx0_LQI                           EQU     33H        ;Demodulator estimate for link q
                             uality
  0034          +1   114     TI_CCxxx0_RSSI                          EQU     34H        ;Received signal strength indica
                             tion
  0035          +1   115     TI_CCxxx0_MARCSTATE                     EQU     35H        ;Control state machine state
  0036          +1   116     TI_CCxxx0_WORTIME1                      EQU     36H        ;High byte of WOR timer
  0037          +1   117     TI_CCxxx0_WORTIME0                      EQU     37H        ;Low byte of WOR timer
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     3

  0038          +1   118     TI_CCxxx0_PKTSTATUS                     EQU     38H        ;Current GDOx status and packet 
                             status
  0039          +1   119     TI_CCxxx0_VCO_VC_DAC                    EQU     39H        ;Current setting from PLL cal mo
                             dule
  003A          +1   120     TI_CCxxx0_TXBYTES                       EQU     3AH        ;Underflow and # of bytes in TXF
                             IFO
  003B          +1   121     TI_CCxxx0_RXBYTES                       EQU     3BH        ;Overflow and # of bytes in RXFI
                             FO
  007F          +1   122     TI_CCxxx0_NUM_RXBYTES                   EQU     7FH        ;Mask "# of bytes" field in _RXB
                             YTES
                +1   123             
                +1   124     ;Other memory locations
  003E          +1   125     TI_CCxxx0_PATABLE                       EQU     3EH
  003F          +1   126     TI_CCxxx0_TXFIFO                        EQU     3FH
  003F          +1   127     TI_CCxxx0_RXFIFO                        EQU     3FH
                +1   128             
  0082          +1   129     PIN_WAVE_RX                             BIT     p0.2;P2.0;p0.1;p1.0
  00B4          +1   130     PIN_OUTPUT_CLK                          BIT     P3.4;P1.0
  008F          +1   131     REG_WAKE_CLK0                           EQU     08FH
  000F          +1   132     CONST_DATA_VALUE1                       EQU     15;20;20;20
  00DE          +1   133     CONST_DATA_VALUE2                       EQU     208+14;14;255;208+14;14
                +1   134     ;------------------------------------------------------------------------------------------
                             -----
                +1   135     ;µçÔ´¿ØÖÆ
  0095          +1   136     PIN_PWRDWN_LCD                          BIT     p1.5;p1.3        
  00A4          +1   137     Pin_pwrdwn                              BIT     p2.4;P2.7        
  00A3          +1   138     PIN_PWR_GSM                             BIT     p2.3;P2.4        
                +1   139             
                +1   140     ;--- Active ---
  00B5          +1   141     Pin_unfix                               BIT     P3.5     
  00B3          +1   142     PIN_card_exist                          BIT     p3.3    
  00B2          +1   143     WKO_BK                                  BIT     P3.2     
  0095          +1   144     PIN_PWR_LOWIO                           BIT     p1.5;P2.1        
                +1   145             
                +1   146     ;--- ESAM ---
  0083          +1   147     PIN_ESAM_TX                             BIT     p0.3;P2.6        
  0083          +1   148     PIN_ESAM_RX                             BIT     p0.3;P2.6        
  0085          +1   149     PIN_ESAM_RST                            BIT     p0.5;P2.5        
                +1   150             
                +1   151     ;--- Éù¹â¿ØÖÆ ---
  00C5          +1   152     Pin_Red                                 BIT     p4.5;P4.1        
  00C4          +1   153     Pin_Gre                                 BIT     p4.4;P4.5
                +1   154     
  0095          +1   155     PIN_BELL_01                             BIT     p1.5;P0.3        
  0095          +1   156     PIN_BELL_02                             BIT     p1.5;P0.2        
                +1   157             
                +1   158     ;--- CC1101 ---
                +1   159     ;Pin_CC1101_SS                          BIT     p3.6     
                +1   160     ;PIN_CC1101_SCLK                                BIT     P2.2     
                +1   161     ;PIN_CC1101_MOSI                                BIT     P2.3     
                +1   162     ;PIN_CC1101_MISO                                BIT     p3.7     
                +1   163     ;PIN_CC1101_GDO2                                BIT     P1.6     
                +1   164             
                +1   165     ;--- Òº¾§Ò½Å ---
  0095          +1   166     Pin_LCD_CS                              BIT     p1.5;p1.4        
  0095          +1   167     Pin_LCD_RST                             BIT     P1.5;    
  0095          +1   168     Pin_LCD_DC                              BIT     p1.5;p1.7       
  0095          +1   169     Pin_LCD_SCL                             BIT     p1.5;p3.4       
  0095          +1   170     Pin_LCD_SDA                             BIT     p1.5;p4.3       
                +1   171             
                +1   172     ;--- 522 ---
  0087          +1   173     PIN_522_SCLK                            BIT     P0.7;P0.7        
  00C6          +1   174     PIN_522_MOSI                            BIT     p4.6;P0.5        
  00C1          +1   175     PIN_522_MISO                            BIT     p4.1;P0.4        
  0086          +1   176     Pin_522_SS                              BIT     P0.6;P0.6        
  0084          +1   177     Pin_522_RST                             BIT     p0.4;P4.6        
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     4

                +1   178             
  00B0          +1   179     PIN_SOFTSERIALRX                        BIT     P3.0     
  00B1          +1   180     PIN_SOFTSERIALTXH                       BIT     P3.1     
                +1   181             
  0095          +1   182     PIN_PWR_SE                              BIT     p1.5    ;p2.2   ; P2.4  ;       [ GSM ] 
  0095          +1   183     Pin_SW                                  BIT     p1.5    
                +1   184             
                +1   185             
                +1   186     ;fu dand wei
  00A6          +1   187     Pin_ES_Rst                              BIT     p2.6;P2.3       ;p4.0;P4.4      ; P4.4  
  00B4          +1   188     PIN_SE_IO1                              BIT     p3.4;p2.4       ;P4.4;p2.3;p4.4;P2.2    ; P
                             0.5
                +1   189             
                +1   190             
                +1   191     ;--- CC1101 ---
  0097          +1   192     PIN_UART2_TX                            BIT     p1.7    ;p3.6   ; P3.7
  0096          +1   193     PIN_UART2_RX                            BIT     P1.6    ; 
                +1   194             
  0000          +1   195     BUSY                                    BIT     20H.0
                +1   196     ;////////////////////////////////////////////////Ò½Å¶¨Òå///////////////////////////////////
                             //////////////
                +1   197     ;ÉèÎª¸ß
  0091          +1   198     PIN_BK_CE                               BIT     p1.1     
  0090          +1   199     Pin_5823BK_CS                           BIT     P1.0
                +1   200     ;Éè³ÉÊäÈëÎª¸ß                           
  0080          +1   201     Pin_5823BK_MISO                         BIT     p0.0     
  0092          +1   202     Pin_5823BK_IRQ                          BIT     p1.2      
                +1   203     ;   Éè ³É µÍ
  0081          +1   204     Pin_5823BK_MOSI                         BIT     p0.1     
  00C2          +1   205     Pin_5823BK_SCLK                         BIT     p4.2     
                +1   206      
  0082          +1   207     PIN_WAVE_CHANNEL1                       BIT     p0.2;P2.0        
                +1   208      
                +1   209     ;=====================================================================================
  008F          +1   210     Reg_WakeClk0                            EQU     08fH
  00DC          +1   211     Reg_WakeClk_04                          BIT     CCON.4  ;P3.4
  00DD          +1   212     Reg_WakeClk_05                          BIT     CCON.5  ;P3.5
                +1   213     ;ÉùÃ÷STC12C5628AD ÏµÁÐ MCU ÌØÊâ¹¦ÄÜ¼Ä´æÆ÷µØÖ·
  00B7          +1   214     IPH EQU 0B7H ;ÖÐ¶ÏÓÅÏÈ¼¶¸ßÎ»¼Ä´æÆ÷
  00AE          +1   215     EPCA_LVD EQU IE.6 ;PCA ÖÐ¶ÏºÍ LVD(µÍÑ¹¼ì²â)ÖÐ¶Ï¹²ÏíµÄ×ÜÖÐ¶Ï¿ØÖÆÎ»
  00F9          +1   216     CH EQU 0F9H ;PCA ¼ÆÊÆ÷¸ß8 Î»¡£
  00E9          +1   217     CL EQU 0E9H ;PCA ¼ÆÊÆ÷µÍ8 Î»¡£
                +1   218     
                +1   219     ;------------------------
  00D8          +1   220     CCON EQU 0D8H ;PCA ¿ØÖÆ¼Ä´æÆ÷¡£
  00D8          +1   221     CCF0 EQU CCON.0 ;PCA Ä£¿é0 ÖÐ¶Ï±êÖ¾, ÓÉÓ²¼þÖÃÎ», ±ØÐëÓÉÈí¼þÇå0¡£
  00D9          +1   222     CCF1 EQU CCON.1 ;PCA Ä£¿é1 ÖÐ¶Ï±êÖ¾, ÓÉÓ²¼þÖÃÎ», ±ØÐëÓÉÈí¼þÇå0¡£
  00DA          +1   223     CCF2 EQU CCON.2 ;PCA Ä£¿é2 ÖÐ¶Ï±êÖ¾, ÓÉÓ²¼þÖÃÎ», ±ØÐëÓÉÈí¼þÇå0¡£
  00DB          +1   224     CCF3 EQU CCON.3 ;PCA Ä£¿é3 ÖÐ¶Ï±êÖ¾, ÓÉÓ²¼þÖÃÎ», ±ØÐëÓÉÈí¼þÇå0¡£
  00DC          +1   225     CCF4 EQU CCON.4 ;PCA Ä£¿é4 ÖÐ¶Ï±êÖ¾, ÓÉÓ²¼þÖÃÎ», ±ØÐëÓÉÈí¼þÇå0¡£
  00DD          +1   226     CCF5 EQU CCON.5 ;PCA Ä£¿é5 ÖÐ¶Ï±êÖ¾, ÓÉÓ²¼þÖÃÎ», ±ØÐëÓÉÈí¼þÇå0¡£
  00DE          +1   227     CR EQU CCON.6 ;1:ÔÊÐí PCA ¼ÆÊÆ÷¼ÆÊ, ±ØÐëÓÉÈí¼þÇå0¡£
  00DF          +1   228     CF EQU CCON.7 ;PCA ¼ÆÊÆ÷Òç³ö(CH,CL ÓÉ FFFFH ±äÎª 0000H)±êÖ¾,
                +1   229     ;PCA ¼ÆÊÆ÷Òç³öºóÓÉÓ²¼þÖÃÎ»,±ØÐëÓÉÈí¼þÇå0¡£
                +1   230     ;------------------------
  00D9          +1   231     CMOD EQU 0D9H ;PCA ¹¤×÷Ä£Ê½¼Ä´æÆ÷¡£
                +1   232     
                +1   233     ;CMOD.7 CIDL: idle ×´Ì¬Ê± PCA ¼ÆÊÆ÷ÊÇ·ñ¼ÌÐø¼ÆÊ, 0: ¼ÌÐø¼ÆÊ, 1: Í£Ö¹¼ÆÊ¡£
                +1   234     ;CMOD.2 CPS1: PCA ¼ÆÊÆ÷¼ÆÊÂö³åÔ´Ñ¡ÔñÎ» 1¡£
                +1   235     ;CMOD.1 CPS0: PCA ¼ÆÊÆ÷¼ÆÊÂö³åÔ´Ñ¡ÔñÎ» 0¡£
                +1   236     ; CPS1 CPS0
                +1   237     ; 0 0 Íâ²¿¾§ÌåÆµÂÊ/12¡£
                +1   238     ; 0 1 Íâ²¿¾§ÌåÆµÂÊ/2¡£
                +1   239     ; 1 0 Timer 0 Òç³öÂö³å£¬
                +1   240     ; Timer 0 »¹¿ÉÍ¨¹ AUXR ¼Ä´æÆ÷ÉèÖÃ³É¹¤×÷ÔÚ 12T »ò 1T Ä£Ê½¡£
                +1   241     ; 1 1 ´Ó ECI/P3.4 ½ÅÊäÈëµÄÍâ²¿Ê±ÖÓ¡£
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     5

                +1   242     ;CMOD.0 ECF: PCA ¼ÆÊÆ÷Òç³öÖÐ¶ÏÔÊÐíÎ», 1-- ÔÊÐí CF(CCON.7) ²úÉúÖÐ¶Ï¡£
                +1   243     ;------------------------
  00FA          +1   244     CCAP0H EQU 0FAH ;PCA Ä£¿é0 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷¸ß 8 Î»¡£
  00FB          +1   245     CCAP1H EQU 0FBH ;PCA Ä£¿é1 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷¸ß 8 Î»¡£
  00FC          +1   246     CCAP2H EQU 0FCH ;PCA Ä£¿é2 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷¸ß 8 Î»¡£
  00FD          +1   247     CCAP3H EQU 0FDH ;PCA Ä£¿é3 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷¸ß 8 Î»¡£
  00FE          +1   248     CCAP4H EQU 0FEH ;PCA Ä£¿é4 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷¸ß 8 Î»¡£
  00FF          +1   249     CCAP5H EQU 0FFH ;PCA Ä£¿é5 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷¸ß 8 Î»¡£
  00EA          +1   250     CCAP0L EQU 0EAH ;PCA Ä£¿é0 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷µÍ 8 Î»¡£
  00EB          +1   251     CCAP1L EQU 0EBH ;PCA Ä£¿é1 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷µÍ 8 Î»¡£
  00EC          +1   252     CCAP2L EQU 0ECH ;PCA Ä£¿é2 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷µÍ 8 Î»¡£
  00ED          +1   253     CCAP3L EQU 0EDH ;PCA Ä£¿é3 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷µÍ 8 Î»¡£
  00EE          +1   254     CCAP4L EQU 0EEH ;PCA Ä£¿é4 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷µÍ 8 Î»¡£
  00EF          +1   255     CCAP5L EQU 0EFH ;PCA Ä£¿é5 µÄ²¶×½/ ±È½Ï¼Ä´æÆ÷µÍ 8 Î»¡£
                +1   256     ;------------------------
  00F2          +1   257     PCA_PWM0 EQU 0F2H ;PCA Ä£¿é0 PWM ¼Ä´æÆ÷¡£
  00F3          +1   258     PCA_PWM1 EQU 0F3H ;PCA Ä£¿é1 PWM ¼Ä´æÆ÷¡£
  00F4          +1   259     PCA_PWM2 EQU 0F4H ;PCA Ä£¿é2 PWM ¼Ä´æÆ÷¡£
  00F5          +1   260     PCA_PWM3 EQU 0F5H ;PCA Ä£¿é3 PWM ¼Ä´æÆ÷¡£
  00F6          +1   261     PCA_PWM4 EQU 0F6H ;PCA Ä£¿é4 PWM ¼Ä´æÆ÷¡£
  00F7          +1   262     PCA_PWM5 EQU 0F7H ;PCA Ä£¿é5 PWM ¼Ä´æÆ÷¡£
                +1   263     ;PCA_PWMn: 7 6 5 4 3 2 1 0
                +1   264     ; - - - - - - EPCnH EPCnL
                +1   265     ;B7-B2: ±£Áô
                +1   266     ;B1(EPCnH): ÔÚ PWM Ä£Ê½ÏÂ£¬Óë CCAPnH ×é³É 9 Î»Ê¡£
                +1   267     ;B0(EPCnL): ÔÚ PWM Ä£Ê½ÏÂ£¬Óë CCAPnL ×é³É 9 Î»Ê¡£
                +1   268     ;------------------------
  00DA          +1   269     CCAPM0 EQU 0DAH ;PCA Ä£¿é0 µÄ¹¤×÷Ä£Ê½¼Ä´æÆ÷¡£
  00DB          +1   270     CCAPM1 EQU 0DBH ;PCA Ä£¿é1 µÄ¹¤×÷Ä£Ê½¼Ä´æÆ÷¡£
  00DC          +1   271     CCAPM2 EQU 0DCH ;PCA Ä£¿é2 µÄ¹¤×÷Ä£Ê½¼Ä´æÆ÷¡£
  00DD          +1   272     CCAPM3 EQU 0DDH ;PCA Ä£¿é3 µÄ¹¤×÷Ä£Ê½¼Ä´æÆ÷¡£
  00DE          +1   273     CCAPM4 EQU 0DEH ;PCA Ä£¿é4 µÄ¹¤×÷Ä£Ê½¼Ä´æÆ÷¡£
  00DF          +1   274     CCAPM5 EQU 0DFH ;PCA Ä£¿é5 µÄ¹¤×÷Ä£Ê½¼Ä´æÆ÷¡£
                +1   275     ;CCAPMn: 7 6 5 4 3 2 1 0
                +1   276     ; - ECOMn CAPPn CAPNn MATn TOGn PWMn ECCFn
                +1   277     ;
                +1   278     ;ECOMn = 1:ÔÊÐí±È½Ï¹¦ÄÜ¡£
                +1   279     ;CAPPn = 1:ÔÊÐíÉÏÉÑØ´¥·¢²¶×½¹¦ÄÜ¡£
                +1   280     ;CAPNn = 1:ÔÊÐíÏÂ½µÑØ´¥·¢²¶×½¹¦ÄÜ¡£
                +1   281     ;MATn = 1:µ±Æ¥ÅäÇé¿ö·¢ÉúÊ±, ÔÊÐí CCON ÖÐµÄ CCFn ÖÃÎ»¡£
                +1   282     ;TOGn = 1:µ±Æ¥ÅäÇé¿ö·¢ÉúÊ±, CEXn ½«·­×ª¡£
                +1   283     ;PWMn = 1:½« CEXn ÉèÖÃÎª PWM Êä³ö¡£
                +1   284     ;ECCFn = 1:ÔÊÐí CCON ÖÐµÄ CCFn ´¥·¢ÖÐ¶Ï¡£
                +1   285     ;ECOMn CAPPn CAPNn MATn TOGn PWMn ECCFn
                +1   286     ; 0 0 0 0 0 0 0 00H Î´ÆôÓÃÈÎºÎ¹¦ÄÜ¡£
                +1   287     ; x 1 0 0 0 0 x 21H 16 Î»CEXn ÉÏÉÑØ´¥·¢²¶×½¹¦ÄÜ¡£
                +1   288     ; x 0 1 0 0 0 x 11H 16 Î»CEXn ÏÂ½µÑØ´¥·¢²¶×½¹¦ÄÜ¡£
                +1   289     ; x 1 1 0 0 0 x 31H 16 Î»CEXn ±ßÑØ(ÉÏ¡¢ÏÂÑØ)´¥·¢²¶×½¹¦ÄÜ¡£
                +1   290     ; 1 0 0 1 0 0 x 49H 16 Î»Èí¼þ¶¨Ê±Æ÷¡£
                +1   291     ; 1 0 0 1 1 0 x 4DH 16 Î»¸ßËÙÂö³åÊä³ö¡£
                +1   292     ; 1 0 0 0 0 1 0 42H 8 Î» PWM¡£
                +1   293     ;------------------------------------------------------------------------------
                +1   294     ;==============================================================================
                +1   295     ;//////////////////////////////////////////////¹«¹²¼Ä´æÆ÷ /////////////////////////////////
                             //////////
  00C7          +1   296     ISP_CONTR                               EQU     0C7h
  008F          +1   297     WAKE_CLKO                               EQU     08fh
                +1   298     ;¸½¼ÓµÄ SFR WAKE_CLKO (µØÖ·£º0x8F)
                +1   299     ;b7 - PCAWAKEUP :1, ÔÊÐí PCA ÉÏÉÑØ / ÏÂ½µÑØÖÐ¶Ï »½ÐÑ powerdown¡£
                +1   300     ;b6 - RXD_PIN_IE:1, ÔÊÐí P3.0(RXD) ÏÂ½µÑØÖÃ RI£¬Ò²ÄÜÊ¹ RXD »½ÐÑ powerdown¡£
                +1   301     ;b5 - T1_PIN_IE :1, ÔÊÐí T1/P3.5 ½ÅÏÂ½µÑØÖÃ T1 ÖÐ¶Ï±êÖ¾£¬Ò²ÄÜÊ¹ T1 ½Å»½ÐÑ powerdown¡£
                +1   302     ;b4 - T0_PIN_IE :1, ÔÊÐí T0/P3.4 ½ÅÏÂ½µÑØÖÃ T0 ÖÐ¶Ï±êÖ¾£¬Ò²ÄÜÊ¹ T0 ½Å»½ÐÑ powerdown¡£
                +1   303     ;b3 - N/A
                +1   304     ;b2 - N/A
                +1   305     ;b1 - T1CLKO : ÔÊÐí T1 µÄÒç³öÔÚP1.1 ½ÅÊä³öÊ±ÖÓ£¬Êä³öÊ±ÖÓÆµÂÊ = 1/2 T1 Òç³öÂÊ
                +1   306     ;       T1 ¹¤×÷ÔÚ1T Ä£Ê½Ê±µÄÊä³öÆµÂÊCLKOUT1 =( Fosc / 2 ) / ( 256 - TH1 )
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     6

                +1   307     ;       T1 ¹¤×÷ÔÚ12T Ä£Ê½Ê±µÄÊä³öÆµÂÊCLKOUT1 =( Fosc / 2 ) / 12 / ( 256 - TH1 )
                +1   308     ;b0 -   T0CLKO : ÔÊÐí T0 µÄÒç³öÔÚP1.0 ½ÅÊä³öÊ±ÖÓ£¬Êä³öÊ±ÖÓÆµÂÊ = 1/2 T0 Òç³öÂÊ
                +1   309     ;       T0 ¹¤×÷ÔÚ1T Ä£Ê½Ê±µÄÊä³öÆµÂÊCLKOUT0 =( Fosc / 2 ) / ( 256 - TH0)
                +1   310     ;       T0 ¹¤×÷ÔÚ12T Ä£Ê½Ê±µÄÊä³öÆµÂÊCLKOUT0 =( Fosc / 2 ) / 12 / ( 256 - TH0 )
                +1   311     ;--------------------------------------------------------
                +1   312     ;--------------------------------------------------------
  0094          +1   313     REG_5412AD_P0M0                         EQU     094h;093h
  0093          +1   314     REG_5412AD_P0M1                         EQU     093h;094h
                +1   315     
  0092          +1   316     REG_5412AD_P1M0                         EQU     092h;091h
  0091          +1   317     REG_5412AD_P1M1                         EQU     091h;092h
                +1   318     
  0096          +1   319     REG_5412AD_P2M0                         EQU     096h;095h
  0095          +1   320     REG_5412AD_P2M1                         EQU     095h;096h
                +1   321     
  00B2          +1   322     REG_5412AD_P3M0                         EQU     0b2h;0b1h
  00B1          +1   323     REG_5412AD_P3M1                         EQU     0b1h;0b2h
                +1   324     
  00B4          +1   325     REG_5412AD_P4M0                         EQU     0b4h;0b3h
  00B3          +1   326     REG_5412AD_P4M1                         EQU     0b3h;0b4h
                +1   327     ;-------------------------------------------------------------
  008E          +1   328     REG_5412AD_AUXR                         EQU     08EH            ;¸¨Öú¼Ä´æÆ÷
  0085          +1   329     REG_5412AD_spctl                        EQU     085H
  0084          +1   330     REG_5412AD_spstat                       EQU     084H
  0086          +1   331     REG_5412AD_spdat                        EQU     086H
  00C1          +1   332     REG_WDT_CONTR                           EQU     0C1H            ;0E1H;0C1H
  00BB          +1   333     REG_5412AD_P4SW                         EQU     0BBH
  00AB          +1   334     REG_MCU_WKCTH                           EQU     0ABH
  00AA          +1   335     REG_MCU_WKCTL                           EQU     0AAH    
                +1   336     ;//////////////////////////////////////////////RC522¼Ä´æÆ÷ ////////////////////////////////
                             ///////////////////
  0000          +1   337     REG_RC522_RC522PAGE                     EQU     00H
  0001          +1   338     REG_RC522_CommandReg                    EQU     01H
  0002          +1   339     REG_RC522_ComIEnReg                     EQU     02H
  0003          +1   340     REG_RC522_DivIEnReg                     EQU     03H
  0004          +1   341     REG_RC522_ComIrqReg                     EQU     04H
  0005          +1   342     REG_RC522_DivIrqReg                     EQU     05H
  0006          +1   343     REG_RC522_ErrorReg                      EQU     06h
  0007          +1   344     REG_RC522_Status1Reg                    EQU     07h
  0008          +1   345     REG_RC522_Status2Reg                    EQU     08h
  0009          +1   346     REG_RC522_FIFODataReg                   EQU     09h
  000A          +1   347     REG_RC522_FIFOLevelReg                  EQU     0ah
  000B          +1   348     REG_RC522_WaterLevelReg                 EQU     0bh
  000C          +1   349     REG_RC522_ControlReg                    EQU     0ch
  000D          +1   350     REG_RC522_BitFramingReg                 EQU     0dh
  000E          +1   351     REG_RC522_CollReg                       EQU     0eh
  000F          +1   352     REG_RC522_RFU                           EQU     0fh
  0011          +1   353     REG_RC522_ModeReg                       EQU     11h
  0012          +1   354     REG_RC522_TxModeReg                     EQU     12h
  0013          +1   355     REG_RC522_RxModeReg                     EQU     13h
  0014          +1   356     REG_RC522_TxControlReg                  EQU     14h
  0015          +1   357     REG_RC522_TxAutoReg                     EQU     15h
  0016          +1   358     REG_RC522_TxSelReg                      EQU     16h
  0017          +1   359     REG_RC522_RxSelReg                      EQU     17h
  0018          +1   360     REG_RC522_RxThresholdReg                EQU     18h
  0019          +1   361     REG_RC522_DemodReg                      EQU     19h
  001C          +1   362     REG_RC522_MifareReg                     EQU     1ch
  001F          +1   363     REG_RC522_SerialSpeedReg                EQU     1fh
  0021          +1   364     REG_RC522_CRCResultRegH                 EQU     21h
  0022          +1   365     REG_RC522_CRCResultRegL                 EQU     22h
  0024          +1   366     REG_RC522_ModWidthReg                   EQU     24h
  0026          +1   367     REG_RC522_RFCfgReg                      EQU     26h
  0027          +1   368     REG_RC522_GsNReg                        EQU     27h
  0028          +1   369     REG_RC522_CWGsPReg                      EQU     28h
  0029          +1   370     REG_RC522_ModGsPReg                     EQU     29h
  002A          +1   371     REG_RC522_TModeReg                      EQU     2ah
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     7

  002B          +1   372     REG_RC522_TPrescalerReg                 EQU     2bh
  002C          +1   373     REG_RC522_TReloadRegH                   EQU     2ch
  002D          +1   374     REG_RC522_TReloadRegL                   EQU     2dh
  002E          +1   375     REG_RC522_TCounterValueRegH             EQU     2eh
  002F          +1   376     REG_RC522_TCounterValueRegL             EQU     2fh
                +1   377             
                +1   378     ;/////////////////////////////////////////////////Ò»°ãÏµÍ³³£Á¿±í///////////////////////////
                             //////////////////////
  0001          +1   379     CONST_HOLD_5823TX                       EQU     1
  0000          +1   380     CONST_HOLD_5823RX                       EQU     0
                +1   381             
                +1   382             
  00FF          +1   383     CONST_SYS_TradeConfine                  EQU     255                             ;½»Ò×Ê±¼äÏÞ
                             ÖÆ
  000A          +1   384     CONST_SYS_PowerONTimer                  EQU     10                              ;ÉÏµç¶¨Ê±Æ÷
                                  
  0088          +1   385     CONST_SYS_PREFlag                       EQU     088H                            ;
  00AA          +1   386     CONST_SYS_AA                            EQU     0AAH
  0055          +1   387     CONST_SYS_55                            EQU     55H
  0004          +1   388     CONST_SYS_OBUIDLEN                      EQU     4                               ;obuid ³¤¶È
  0008          +1   389     CONST_BSTLIMIT                          EQU     8;20;10                 ;¼«ÏÞBST¸öÊ
  0064          +1   390     CONST_BSTLIMIT02                        EQU     100
                +1   391     
  00FF          +1   392     CONST_VSTLIMIT                          EQU     255     ;100                    ;¼«ÏÞVST¸öÊ
  00FA          +1   393     CONST_Pro_OverTime2S                    EQU     250                             ;³¬Ê±ÏÞÊ±£¬
                             196-246*30=1200MS 
                +1   394     ;/////////////////////////////////////////////////³öÈë¿Ú³£Á¿±í/////////////////////////////
                             ////////////////////
  0003          +1   395     CONST_ETC_INPUT                         EQU     3       ;ETC Èë¿Ú
  0001          +1   396     CONST_MTC_INPUT                         EQU     1       ;MTC Èë¿Ú
  0001          +1   397     CONST_INPUT_ISEnable                    EQU     1;=1²»ÆôÓÃ =0ÆôÓÃ
                +1   398     ;/////////////////////////////////////////////////×´Ì¬³£Á¿±í///////////////////////////////
                             //////////////////
  0000          +1   399     CONST_STATE_TRUE                        EQU     000H                            ;Ö´ÐÐ³É¹¦
  00FF          +1   400     CONST_STATE_FALSE                       EQU     0FFH                            ;³ÌÐòÖ´ÐÐ³ö
                             ´í
                +1   401     ;Ò»°ãÐÔ´íÎó     01      µ¼ÈëÊ§°Ü        STR_InputFail
                +1   402     ;ºÏÍ¬ºÅ²»Í¬     02      ·Ç·¨µ¼Èë¿¨      STR_IllegalInputCard
                +1   403     ;Ê¹ÓÃ´ÎÊ=FFH    03      µ¼Èë¿¨Ê§Ð§      STR_InputCardInvalid
  0001          +1   404     CONST_STATE_InputFail                   EQU     01
  0002          +1   405     CONST_STATE_IllegalInputCard            EQU     02
  0003          +1   406     CONST_STATE_InputCardInvalid            EQU     03
                +1   407     ;Ò»°ãÐÔ´íÎó     04      ¼¤»îÊ§°Ü        STR_ActiveFail
                +1   408     ;ºÏÍ¬ºÅ²»Í¬     05      ·Ç·¨¼¤»î¿¨      STR_IllegalACTCard
                +1   409     ;Ê¹ÓÃ´ÎÊ=FFH    06      ¼¤»î¿¨Ê§Ð§      STR_ACTCardInvalid
  0004          +1   410     CONST_STATE_ActiveFail                  EQU     04
  0005          +1   411     CONST_STATE_IllegalACTCard              EQU     05
  0006          +1   412     CONST_STATE_ACTCardInvalid              EQU     06
                +1   413             
  0007          +1   414     CONST_STATE_5823INIER                   EQU     07      ;5823³õÊ¼»¯³ö´í
  0008          +1   415     CONST_STATE_5823SleepEr                 EQU     08      ;5823ÐÝÃß³ö´í
  0009          +1   416     CONST_STATE_GetSecureSelFileEr          EQU     09      ;getsecureÑ¡¿¨Ä¿Â¼³ö´í
                +1   417     
  000A          +1   418     CONST_STATE_BaseNinit                   EQU     10      ;Baseinit02º¯Ê£¬³õÊ¼»¯¿¨Æ¬Ê§°Ü
  000B          +1   419     CONST_STATE_BaseESAMDF01                EQU     11      ;Baseinit02º¯Ê£¬Ñ¡ESAM¿¨DF01Ê§°Ü
                +1   420             
  000C          +1   421     CONST_STATE_CARDPreDeal1001             EQU     12      ;Ô¤¶Á1001Ê§°Ü
  000D          +1   422     CONST_STATE_CARDPreDeal0002             EQU     13      ;Ô¤¶Á0002Ê§°Ü
  000E          +1   423     CONST_STATE_CARDPreDeal0012             EQU     14      ;Ô¤¶Á0012Ê§°Ü
  000F          +1   424     CONST_STATE_CARDPreDeal0015             EQU     15      ;Ô¤¶Á0015Ê§°Ü
  0010          +1   425     CONST_STATE_CARDPreDeal0019             EQU     16      ;Ô¤¶Á0019Ê§°Ü
  0011          +1   426     CONST_STATE_CARDPreDeal3f00             EQU     17      ;Ô¤¶Á3f00Ê§°Ü
  0012          +1   427     CONST_STATE_CARDPreDeal81               EQU     18      ;Ô¤¶Á81Ê§°Ü
                +1   428             
  0013          +1   429     CONST_STATE_BaseN01init                 EQU     19      ;Baseinitº¯Ê£¬³õÊ¼»¯¿¨Æ¬Ê§°Ü
  0014          +1   430     CONST_STATE_Base01ESAMDF01              EQU     20      ;Baseinitº¯Ê£¬Ñ¡ESAM¿¨DF01Ê§°Ü
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     8

                +1   431             
  0015          +1   432     CONST_STATE_Base01Contact               EQU     21      ;Baseinitº¯Ê£¬Ìøµ½½Ó´¥
  0016          +1   433     CONST_STATE_Base02Contact               EQU     22      ;Baseinit02º¯Ê£¬Ìøµ½½Ó´¥        
                +1   434             
  0017          +1   435     CONST_STATE_test                        EQU     23      ;Baseinit02º¯Ê£¬Ìøµ½½Ó´¥        
                +1   436             
  0018          +1   437     CONST_STATE_Base02Re                    EQU     24
  0019          +1   438     CONST_STATE_Base02AntiColl              EQU     25
  001A          +1   439     CONST_STATE_Base02Sel                   EQU     26
  001B          +1   440     CONST_STATE_Base02Rats                  EQU     27
                +1   441             
  001C          +1   442     CONST_STATE_Base01Re                    EQU     28
  001D          +1   443     CONST_STATE_Base01AntiColl              EQU     29
  001E          +1   444     CONST_STATE_Base01Sel                   EQU     30
  001F          +1   445     CONST_STATE_Base01Rats                  EQU     31      
                +1   446             
  0020          +1   447     CONST_STATE_MemoryEr                    EQU     32      
  0021          +1   448     CONST_STATE_ExMemoryEr                  EQU     33      
  0022          +1   449     CONST_STATE_ExMemoryEr02                EQU     34      
                +1   450             
  0001          +1   451     CONST_STATE_SERIALACCPET                EQU     001H                            ;´®¿Ú½ÓÊÕ´í
                             Îó
  0002          +1   452     CONST_STATE_SERIALOVERTIME              EQU     CONST_STATE_SERIALACCPET + 1    ;´®¿Ú½ÓÊÕ³¬
                             Ê±
  0003          +1   453     CONST_STATE_ACCEPTOVER                  EQU     CONST_STATE_SERIALOVERTIME + 1  ;´®¿Ú½ÓÊÕÍê
                             ±Ï£¬Ã»ÓÐºóÐø×Ö½Ú 
  0004          +1   454     CONST_STATE_ACCEPTOVERLEN               EQU     CONST_STATE_ACCEPTOVER + 1      ;´®¿Ú½ÓÊÕ³¬
                             ³¤
  0005          +1   455     CONST_STATE_RSTCPUER                    EQU     CONST_STATE_ACCEPTOVERLEN + 1   ;¸´Î»´®¿Ú´í
                             Îó
  0006          +1   456     CONST_STATE_AUTHER                      EQU     CONST_STATE_RSTCPUER + 1        ;ÈÏÖ¤Ê§°Ü
                +1   457             
                +1   458     ;--- ¹¤×÷Çø³£Á¿¶¨Òå ---
  0000          +1   459     CONST_WORKSTAION_0                      EQU     00H     ;¹¤×÷Çø0
  0001          +1   460     CONST_WORKSTAION_1                      EQU     01H     ;¹¤×÷Çø1
  0002          +1   461     CONST_WORKSTAION_2                      EQU     02H     ;¹¤×÷Çø2        
  0003          +1   462     CONST_WORKSTAION_3                      EQU     03H     ;¹¤×÷Çø3
                +1   463     
                +1   464     ;//////////////////////////////////////¿¨Æ¬Âß¼­³£Á¿¶¨Òå////////////////////////////////////
                             ////////
  0017          +1   465     CONST_CARD_PASS                         EQU     23
  0016          +1   466     CONST_CARD_CONSUME                      EQU     22
                +1   467     ;//////////////////////////////////////GSM³£Á¿¶¨Òå/////////////////////////////////////////
                             /////////
  0002          +1   468     CONST_LHX_FLAG                          EQU     2 ;0-¹ú±êOBU  1-GSM OBU  2-433 OBU
                +1   469     
                +1   470     ;RTC ´ó´°Ê±¼ä                           ;6·ÖÖÓ£¬Æ½¾ùÁ½ÃëÒ»´ÎcellID
                +1   471     ;CONST_RTCOverFlow                      EQU     144;180;180
                +1   472     ;CONST_RTCUartRX                        EQU     24;4;8,12,16,20,24;142;
                +1   473     
  0090          +1   474     CONST_RTCOverFlow                       EQU     144;20;144;6;144;6;12;144
                +1   475     ;CONST_RTCUartRX                                EQU     12
                +1   476     ;CONST_RTCUartRX02                      EQU     142
  0000          +1   477     CONST_Flag_INPUT                        EQU     0
  0001          +1   478     CONST_Flag_OutPUT                       EQU     1
                +1   479     
                +1   480     ;GSM CellID ¼ÇÂ¼Ê¾ÝËùÔÚµÄÎÄ¼þÃû
  0000          +1   481     CONST_Cellfile_H                        EQU     000H
  0009          +1   482     CONST_Cellfile_L                        EQU     09h;030H
                +1   483     
  00EF          +1   484     CONST_ESAMCellfile_H                    EQU     0EFH;000H
  0007          +1   485     CONST_ESAMCellfile_L                    EQU     07H;03h;030H
                +1   486     ;CONST_Cellfile_H                       EQU     000H
                +1   487     ;CONST_Cellfile_L                       EQU     008h
                +1   488     
  00F0          +1   489     CONST_GSM_MaxNum                        EQU     240
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE     9

                +1   490     ;CONST_GSM_MaxNum                       EQU     5
                +1   491     
  0014          +1   492     CONST_GSM_PJNum                         EQU     20
                +1   493     ;CONST_GSM_PJNum                        EQU     1
                +1   494     
                +1   495     ;RTC Ð¡´°Ê±¼ä;
  0008          +1   496     CONST_MCU_WKCTH                         EQU     008H;0fh;00fH;00fH;00fH
  00FF          +1   497     CONST_MCU_WKCTL                         EQU     0FFH
                +1   498     
                +1   499     ;RTC ÊÇ·ñ¿ªÆô£¬±ê¼ÇÖµ
                +1   500     ;=CONST_RTC_ON ±íÊ¾¿ªÆô
                +1   501     ;= ÆäËü Ã»ÓÐ¿ªÆô
  0055          +1   502     CONST_RTC_ON                            EQU     55H
  00FF          +1   503     CONST_RTC_off                           EQU     0ffH
  0064          +1   504     CONST_SYS_RTCOverTime                   EQU     100
                +1   505     
                +1   506     ;²å¿¨½«obuÖÐCellid¼ÇÂ¼µ¼Èëµ½¿¨Æ¬ÖÐ£¬Ò»´ÎÐ´Èëµ½¿¨Æ¬ÖÐ cellID µÄ×Ö½ÚÊ
  0008          +1   507     CONST_GSM_NUM                           EQU     8               ;40
                +1   508     ;//////////////////////////////////////MF³£Á¿¶¨Òå//////////////////////////////////////////
                             ////////
  0000          +1   509     CONST_MF_READ                           EQU     00H     ;Ö¸ÁîÀàÐÍ ¶Á¿é
  0001          +1   510     CONST_MF_WRITE                          EQU     01H     ;Ö¸ÁîÀàÐÍ Ð´¿é
  0002          +1   511     CONST_MF_DECREMENT                      EQU     02H     ;Ö¸ÁîÀàÐÍ ¿Û¿î
  0003          +1   512     CONST_MF_INCREMENT                      EQU     03H     ;Ö¸ÁîÀàÐÍ ³äÖµ
  0004          +1   513     CONST_MF_RESTOR                         EQU     04H     ;Ö¸ÁîÀàÐÍ ±¸·Ý¿é
                +1   514     
  00C0          +1   515     CONST_MF_RC500DECREMENT                 EQU     0C0H    ;RC500 ¿Û¿î
  00C1          +1   516     CONST_MF_RC500INCREMENT                 EQU     0C1H    ;RC500 ³äÖµ
                +1   517     ;//////////////////////////////////////DSRC³£Á¿¶¨Òå////////////////////////////////////////
                             //////////
  0004          +1   518     CONST_DSRC_MACCTRL                      EQU     4       ;MAC¿ØÖÆÓò
  0005          +1   519     CONST_DSRC_LLCCTRL                      EQU     5       ;LLC¿ØÖÆÓò
  0006          +1   520     CONST_DSRC_HEAD                         EQU     6       ;×Ö¶Î×ÖÍ·
  0007          +1   521     CONST_DSRC_ACTION                       EQU     7       ;Action
  0008          +1   522     CONST_DSRC_DID                          EQU     8       ;DSRC-DID
  0009          +1   523     CONST_DSRC_ACTIONTYPE                   EQU     9       ;ActionType
  000A          +1   524     CONST_DSRC_CONTAIN                      EQU     10      ;Contain
  000B          +1   525     CONST_DSRC_Fill                         EQU     11      ;Fill
  000C          +1   526     CONST_SSRC_FID                          EQU     12      ;ÎÄ¼þ±êÊ¶£¨FID£©
                +1   527     
  0000          +1   528     CONST_DSRC_FildIDAPPKey                 EQU     0       ;0¨D¨DETC Ó¦ÓÃÃÜÔ¿ÎÄ¼þ
  0001          +1   529     CONST_DSRC_FildIDVehicle                EQU     1       ;1¨D¨DETC Ó¦ÓÃ³µÁ¾ÐÅÏ¢ÎÄ¼þ
  0002          +1   530     CONST_DSRC_FildIDConsume                EQU     2       ;2-ETC Ó¦ÓÃ½»Ò×¼ÇÂ¼ÎÄ¼þ
  0003          +1   531     CONST_DSRC_FildIDHold                   EQU     3       ;3-ETC Ó¦ÓÃ±£ÁôÎÄ¼þ
                +1   532     
  0001          +1   533     CONST_DSRC_ChannelIDICC                 EQU     1
  0002          +1   534     CONST_DSRC_ChannelIDSAM                 EQU     2
                +1   535     ;//////////////////////////////////////AcionType³£Á¿¶¨Òå///////////////////////////////////
                             ////////////
  0000          +1   536     Const_ActionType_GetSecure              EQU     0       ;getSecure
  0001          +1   537     Const_ActionType_SetSecure              EQU     1       ;setSecure
  0002          +1   538     Const_ActionType_GetRand                EQU     2       ;getRand
  0003          +1   539     Const_ActionType_TransferChannel        EQU     3       ;transferChannel
  0004          +1   540     Const_ActionType_SetMMI                 EQU     4       ;SetMMI
                +1   541     ;//////////////////////////////////////Flash³£Á¿¶¨Òå///////////////////////////////////////
                             ///////////
  0058          +1   542     CONST_Flash_SysinfoLen                  EQU     88;39;38+12     ; ESAMÏµÍ³ÐÅÏ¢ÎÄ¼þ³¤¶È
  0004          +1   543     CONST_Flash_0002Len                     EQU     4       ; 0002ÏµÍ³ÐÅÏ¢ÎÄ¼þ³¤¶È  
  0028          +1   544     CONST_Flash_0012Len                     EQU     40      ; 0012ÏµÍ³ÐÅÏ¢ÎÄ¼þ³¤¶È
                +1   545     ;CONST_Flash_0015Len                    EQU     33      ; 0015ÏµÍ³ÐÅÏ¢ÎÄ¼þ³¤¶È
  002B          +1   546     CONST_Flash_0015Len                     EQU     43      ; 0015ÏµÍ³ÐÅÏ¢ÎÄ¼þ³¤¶È
  003C          +1   547     CONST_Flash_0019Len                     EQU     60;43   ; 0019ÏµÍ³ÐÅÏ¢ÎÄ¼þ³¤¶È
  002B          +1   548     CONST_Flash_0019GBLen                   EQU     43;43   ; 0019ÏµÍ³ÐÅÏ¢ÎÄ¼þ³¤¶È
  0001          +1   549     CONST_Flash_CardTypeLEN                 EQU     1       ; ÉÏ´Î²å¿¨ÊÇ½Ó´¥£¬»¹ÊÇ·Ç½Ó´¥
                +1   550     ;CONST_Flash_SYSPARAMLEN                EQU     1       ; ÏµÍ³²ÎÊ
  0008          +1   551     CONST_Flash_BeaconIDUnixTimeLen         EQU     8       ; ÌìÏßID¼°unixtime
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    10

  0001          +1   552     CONST_FALSH_PREFlagLen                  EQU     1       ; Ô¤´¦Àí±ê¼Ç=88,±íÊ¾ÉÏ»ØÔ¤´¦Àí³É¹¦
                +1   553     
                +1   554     ;************************************************************************************
                +1   555     ;ÌØ±ð±¸×¢: ÓÉÓÚÔÚÔ¤¶Á0015/0012/0019Ê±ÔÝ´æÔÚÍâ´æµÄ³¤¶È³¬¹128¸ö×Ö½Ú£¬ËùÒÔ£¬Íâ´æ±äÁ¿µÄÆðÆôÎ»ÖÃ
                             £¬ÒªÔÚConst_Flash_FileLen
                +1   556     ;³¤¶ÈÖ®ºó£¬Const_Flash_FileLen = 8F£¬Èç¹ûÒÔºóConst_Flash_FileLen³¤¶È¸ÄÁË£¬ÄÇÍâ´æµÄÆôÊ¼Î»ÖÃÒ
                             ²Òª¸Ä
                +1   557     ;Íâ´æµÄÆôÊ¼Î»ÖÃ¶¨ÒåÔÚOBUmain.incÖÐXDATA_VARSTARTµÄÖµ
                +1   558     ;************************************************************************************
  00EC          +1   559     Const_Flash_FileLen                     EQU     CONST_Flash_SysinfoLen + CONST_Flash_0015Le
                             n + CONST_Flash_0019Len + CONST_Flash_0012Len + CONST_Flash_0002Len + CONST_Flash_CardTypeLEN 
                +1   560     
  0072          +1   561     CONST_FLASH_Block01                     EQU     72H
                +1   562     
  0072          +1   563     CONST_FLASH_STARTHIGH                   EQU     CONST_FLASH_Block01;2EH                    
                                                  ; FLASH´æ´¢ÇøÆðÆôµØÖ·
  0000          +1   564     CONST_FLASH_STARTLOW                    EQU     00H                                        
                                  ; FLASH´æ´¢ÇøÆðÆôµØÖ·
                +1   565     
  0072          +1   566     CONST_FLASH_SYSINFOH                    EQU     CONST_FLASH_Block01;2EH                    
                                                  ; ESAMÏµÍ³ÐÅÏ¢ÎÄ¼þ,LEN = 38 BYTE
  0000          +1   567     CONST_FLASH_SYSINFOL                    EQU     00H
                +1   568     
  0072          +1   569     CONST_FLASH_0002H                       EQU     CONST_FLASH_Block01;2EH                    
                                                  ; ÓÃ»§¿¨0002,LEN = 4 BYTE
  0058          +1   570     CONST_FLASH_0002L                       EQU     CONST_FLASH_SYSINFOL + CONST_Flash_SysinfoL
                             en
                +1   571     
  0072          +1   572     CONST_FLASH_0012H                       EQU     CONST_FLASH_Block01;2EH                    
                                                  ; ÓÃ»§¿¨0012,LEN = 24 BYTE
  005C          +1   573     CONST_FLASH_0012L                       EQU     CONST_FLASH_0002L + CONST_Flash_0002Len
                +1   574     
  0072          +1   575     CONST_FLASH_0015H                       EQU     CONST_FLASH_Block01;2EH                    
                                                  ; ÓÃ»§¿¨0015,LEN = 33 BYTE
  0084          +1   576     CONST_FLASH_0015L                       EQU     CONST_FLASH_0012L + CONST_Flash_0012Len
                +1   577     
  0072          +1   578     CONST_FLASH_0019H                       EQU     CONST_FLASH_Block01;2EH                    
                                                  ; ÓÃ»§¿¨0019,LEN = 43 BYTE      
  00AF          +1   579     CONST_FLASH_0019L                       EQU     CONST_FLASH_0015L + CONST_Flash_0015Len
                +1   580             
                +1   581     ;CONST_FLASH_01BlockH                   EQU     6EH;2EH                                    
                                  ; MF¿¨µÚ1¿éÊ¾Ý
                +1   582     ;CONST_FLASH_01BlockL                   EQU     CONST_FLASH_0019L + CONST_Flash_0019Len
                +1   583             
                +1   584     ;CONST_FLASH_04BlockH                   EQU     6EH;2EH
                +1   585     ;CONST_FLASH_04BlockL                   EQU     CONST_FLASH_01BlockL + 16                  
                                  ;MF¿¨µÚ4¿éÊ¾Ý
                +1   586             
                +1   587     ;CONST_FLASH_10BlockH                   EQU     6EH;2EH
                +1   588     ;CONST_FLASH_10BlockL                   EQU     CONST_FLASH_04BlockL + 16                  
                                  ;MF¿¨µÚ16¿éÊ¾Ý
                +1   589             
  0072          +1   590     CONST_FLASH_LASTCARDH                   EQU     CONST_FLASH_Block01;2EH                    
                                                  ;ÉÏÒ»´Î²å¿¨ÀàÐÍ
  00EB          +1   591     CONST_FLASH_LASTCARDL                   EQU     CONST_FLASH_0019L + CONST_Flash_0019Len    
                                  ;CONST_FLASH_10BlockL + 16
                +1   592             
                +1   593     ;CONST_FLASH_SYSPARAMH                  EQU     6EH;2EH                         ;ÏµÍ³²ÎÊ
                +1   594     ;CONST_FLASH_SYSPARAML                  EQU     CONST_FLASH_LASTCARDL + 1
                +1   595             
  0072          +1   596     CONST_Flash_BeaconIDUnixTimeH           EQU     CONST_FLASH_Block01;2EH
  00EC          +1   597     CONST_Flash_BeaconIDUnixTimeL           EQU     CONST_FLASH_LASTCARDL + 1       ; 8 byte Ìì
                             ÏßIDºÍunixtimeÊ±¼ä
                +1   598             
  0072          +1   599     CONST_FALSH_PREFlagH                    EQU     CONST_FLASH_Block01;2EH
  00F4          +1   600     CONST_FALSH_PREFlagL                    EQU     CONST_Flash_BeaconIDUnixTimeL + CONST_Flash
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    11

                             _BeaconIDUnixTimeLen;1 Byte
                +1   601             
  0072          +1   602     CONST_FALSH_PREFlag02H                  EQU     CONST_FLASH_Block01;2EH
  00F5          +1   603     CONST_FALSH_PREFlag02L                  EQU     CONST_FALSH_PREFlagL + 1        ;1      ;3 
                             Byte
                +1   604              
  0072          +1   605     CONST_FALSH_PREFlag03H                  EQU     CONST_FLASH_Block01;2EH
  00F6          +1   606     CONST_FALSH_PREFlag03L                  EQU     CONST_FALSH_PREFlag02L + 1      ;1      ;3 
                             Byte
                +1   607             
  0072          +1   608     CONST_FALSH_PowerH                      EQU     CONST_FLASH_Block01;2EH
  00F7          +1   609     CONST_FALSH_PowerL                      EQU     CONST_FALSH_PREFlag03L + 1      ;1      ;3 
                             Byte
                +1   610             
                +1   611     ;CONST_FLASH_SysRstH                    EQU     06CH
                +1   612     ;CONST_FLASH_SysRstL                    EQU     000H
                +1   613             
  006C          +1   614     CONST_FLASH_Sys0020H                    EQU     6ch;064H
  0000          +1   615     CONST_FLASH_Sys0020L                    EQU     000H
                +1   616             
  006A          +1   617     CONST_FLASH_Sys0020numH                 EQU     6ah;062H
  0000          +1   618     CONST_FLASH_Sys0020numL                 EQU     000H
                +1   619             
                +1   620     ;CONST_FLASH_SysHVH                     EQU     6CH;68h;062H
                +1   621     ;CONST_FLASH_SysHVL                     EQU     000H
                +1   622             
  00FF          +1   623     const_black_h                           EQU     0ffH
  00FF          +1   624     const_black_l                           EQU     0ffH
                +1   625             
  0000          +1   626     const_white_h                           EQU     000H;40h                                ; 0
                             0h
  0031          +1   627     const_white_l                           EQU     031H;80h                                ; 0
                             0h
                +1   628     ;//////////////////////////////////////////////////////////////////////////////////////////
                             ///////////
                +1   629     ;(¾§Õñ*2)/(32*12*²¨ÌØÂÊ)                
                +1   630     ;CONST_SOF                              EQU     22118400                        ; 24576000
  0000          +1   631     CONST_SOF                               EQU     24576000                        ; µ±Ç°Ö÷Æµ¾
                             §ÌåÆµÂÊ
                +1   632     ;//////////////////////////////////////// PPS ³£Á¿ ¶¨Òå ///////////////////////////////////
                             ////////////
  0010          +1   633     CONST_PPS_9600                          EQU     10H                             
  0013          +1   634     CONST_PPS_38400                         EQU     13H
  0018          +1   635     CONST_PPS_115200                        EQU     18H
  0096          +1   636     CONST_PPS_230000                        EQU     96H
                +1   637     ;//////////////////////////////////////// ´®¿Ú ³£Á¿ ¶¨Òå //////////////////////////////////
                             /////////////
                +1   638             
  0000          +1   639     CONST_BAUD_9600                         EQU     00                              ; ²¨ÌØÂÊ±àÂ
                             ë
  0001          +1   640     CONST_BAUD_38400                        EQU     01
  0002          +1   641     CONST_BAUD_115200                       EQU     02
  0003          +1   642     CONST_BAUD_115200PC                     EQU     03
  0004          +1   643     CONST_BAUD_230000                       EQU     04
  0005          +1   644     CONST_BAUD_38400PC                      EQU     5
  0006          +1   645     CONST_BAUD_9600PC                       EQU     06                              ; ²¨ÌØÂÊ±àÂ
                             ë
                +1   646             
                +1   647     ;ÔÚ24.576MÏÂ´®¿ÚµÚÒ»¸ö×Ö½ÚÉè¶¨ÎªÒª¼ìË÷100MS = CONST_SOF/(10*(FF*FF) = 38 = 26H
  0010          +1   648     CONST_SOFTFIRSTSCANTIME                 EQU     16;8;32;16;8;10H        ; 10h   ;10h    ;10
                             H;0dH;10H    ;  26H
  00FF          +1   649     CONST_SOFTFIRSTSCANTIMEXX               EQU     0FFH    ; ESAM¿¨·Ç³£¹æÖ¸Áî£¬¼Ó´óËÑË÷Ê±¼äÏÞÖ
                             Æ[Èç80 E4Ö¸Áî]
  0070          +1   650     CONST_SOFTSECOND                        EQU     070H    ; 10H   ;  Èí½ÓÊÕµÚ¶þ¸ö×Ö½Ú½ÓÊÕÊ±¼ä
                             ÏÞ³¤ CONST_SOFTSECOND*255¸öÖÜÆÚ
  0015          +1   651     CONST_HANDSECOND                        EQU     15H     ; 01AH[ÔÚ9600²¨ÌØÏÂ£¬Òª·Å¿íµ½1AH];Ó
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    12

                             ²½ÓÊÕµÚ¶þ¸ö×Ö½Ú½ÓÊÕÊ±¼äÏÞ³¤ CONST_HANDSECOND*255¸öÖÜÆÚ
                +1   652                                                     
  0014          +1   653     CONST_SOFTBYTESP                        EQU     20;50;4 ;Èí´®¿Ú·¢ËÍ³ÌÐò×Ö½Ú¼ä¾à¿ØÖÆÓë_FUN_L
                             IB_DELAYSIMPLAYº¯ÊÅäºÏÊ¹ÓÃ
                +1   654     ;//////////////////////////////////////// Èí´®¿Ú ³£Á¿ ¶¨Òå ////////////////////////////////
                             ///////////////
                +1   655     ;CONST_BAUD_FULL9600                    EQU     637     ;2560
                +1   656     ;CONST_BAUD_HALF9600                    EQU     317     ;2560
                +1   657     ;CONST_BAUD_FULL9600                    EQU     576     ;2304
                +1   658     ;CONST_BAUD_HALF9600                    EQU     285     ;1152
                +1   659     ;CONST_BAUD_FULL9600                    EQU     76      ;2304
                +1   660     ;CONST_BAUD_HALF9600                    EQU     85      ;1152
                +1   661     ;CONST_BAUD_FULL38400                   EQU     157     ;640
                +1   662     ;CONST_BAUD_HALF38400                   EQU     77      ;213
                +1   663     ;CONST_BAUD_FULL38400                   EQU     141     ;576
                +1   664     ;CONST_BAUD_HALF38400                   EQU     69      ;288
                +1   665     ;CONST_BAUD_FULL115200                  EQU     50      ;213 Ã¿Î»²îÒ»µ½2¸öÂö³å£¬Èç¹û²»ÐÐ£¬¾
                             ÍÖ±½Ó»»ÁËÑÓÊ±º¯Ê
                +1   666     ;CONST_BAUD_HALF115200                  EQU     21      ;213 Ã¿Î»²îÒ»µ½2¸öÂö³å£¬Èç¹û²»ÐÐ£¬¾
                             ÍÖ±½Ó»»ÁËÑÓÊ±º¯Ê
                +1   667     ;CONST_BAUD_FULL115200                  EQU     45      ;192 Ã¿Î»²îÒ»µ½2¸öÂö³å£¬Èç¹û²»ÐÐ£¬¾
                             ÍÖ±½Ó»»ÁËÑÓÊ±º¯Ê
                +1   668     ;CONST_BAUD_HALF115200                  EQU     21      ;96  Ã¿Î»²îÒ»µ½2¸öÂö³å£¬Èç¹û²»ÐÐ£¬¾
                             ÍÖ±½Ó»»ÁËÑÓÊ±º¯Ê
                +1   669             
  00B3          +1   670     CONST_BAUD_FULL9600                     EQU     179     ;[(24576000/9600)*(3.58/6)-12]/4-20
                             0=[2560*(3.59/6)-12]/4-250=(1527-12)/4-200=378.75=379-200=179
  0058          +1   671     CONST_BAUD_HALF9600                     EQU     88      ;[(24576000/9600/2)*(3.58/6)-12]/4-
                             100=[2560*(3.59/6)-12]/4=(763-12)/4-100=187.75=188-100=88
                +1   672     
  005D          +1   673     CONST_BAUD_FULL38400                    EQU     93      ;[(24576000/38400)*(3.58/6)-12]/4= 
                             [640 * (3.59/6)-12]/4 = (382-12)/4=92.5=93
  002D          +1   674     CONST_BAUD_HALF38400                    EQU     45      ;[(24576000/38400/2)*(3.58/6)-12]/4
                             = [320 * (3.59/6)-12]/4 = (191-12)/4=44.75=45
                +1   675     
  001D          +1   676     CONST_BAUD_FULL115200                   EQU     29      ;[(24576000/115200)*(3.58/6)-12]/4=
                             [213*(3.58/6)-12]/4=(127-12)/4=28.75=29
  000D          +1   677     CONST_BAUD_HALF115200                   EQU     13;     ;[(24576000/115200/2)*(3.58/6)-12]/
                             4=[115.5*(3.58/6)-12]/4=(64-12)/4=13
                +1   678     
  000F          +1   679     CONST_BAUD_FULL230000                   EQU     15;13   ;[(24576000/230000/2)*(3.58/6)]/4 =
                              64/4 = 16
  0008          +1   680     CONST_BAUD_HALF230000                   EQU     8;5     ;[(24576000/230000/2)*(3.58/6)]/4=[
                             115.5*(3.58/6)]/4=32/4=8
                +1   681             
  00B3          +1   682     CONST_BAUD_CURRENTBITFULL               EQU     CONST_BAUD_FULL9600
  0058          +1   683     CONST_BAUD_CURRENTBITHALF               EQU     CONST_BAUD_HALF9600
                +1   684     ;CONST_BAUD_BITHALF12                   EQU     CONST_BAUD_CURRENTBITHALF - 3
                +1   685     ;CONST_BAUD_BITFULL8                    EQU     CONST_BAUD_CURRENTBITFULL - 2
                +1   686     ;CONST_BAUD_BITFULL12                   EQU     CONST_BAUD_CURRENTBITFULL - 3
                +1   687     ;CONST_BAUD_BITFULL20                   EQU     CONST_BAUD_CURRENTBITFULL - 5
                +1   688     ;CONST_BAUD_BITFULL28                   EQU     CONST_BAUD_CURRENTBITFULL - 7
                +1   689             
  000C          +1   690     CONST_BAUD_BITHALF12                    EQU     3 + 9
  000B          +1   691     CONST_BAUD_BITFULL8                     EQU     2 + 9
  000C          +1   692     CONST_BAUD_BITFULL12                    EQU     3 + 9
  000E          +1   693     CONST_BAUD_BITFULL20                    EQU     5 + 9
  0010          +1   694     CONST_BAUD_BITFULL28                    EQU     7 + 9
                +1   695             
                +1   696     ;////////////////////////////////////////  Ó²´®¿Ú ³£Á¿ ¶¨Òå ///////////////////////////////
                             ////////////////
                +1   697     ;CONST_BAUD_HAND115200                  EQU     0FFH;(256 - CONST_SOF/(192*115200))     ;
                +1   698     ;CONST_BAUD_HAND38400                   EQU     0FDH;(256 - (CONST_SOF/(192*38400)))    ;
                +1   699     ;CONST_BAUD_HAND9600                    EQU     0F4H;(256 - CONST_SOF/(192*9600))       ;
                +1   700     
  00FC          +1   701     CONST_BAUD_HAND230000                   EQU     252     ;0FCH   24.576x1000000/(230000x6/3.
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    13

                             58=)/16 = 4 = F8H
  00F3          +1   702     CONST_BAUD_HAND115200PC                 EQU     243     ;243    ;24.576 / 0F3H  ;24576000 /
                              32179 = 764 / 16 = 47.7 = 48 = D0H
  00F8          +1   703     CONST_BAUD_HAND115200                   EQU     248     ;0F8H   ;24.576x1000000/(115200x6/3
                             .58=193073)/16 = 8 = F8H             
  00D8          +1   704     CONST_BAUD_HAND38400pc                  EQU     216     ;0E8H   ;24.576x1000000/(38400x6/3.
                             58=64358)/16 = 24 = E8H
  00E9          +1   705     CONST_BAUD_HAND38400                    EQU     233     ;0E8H   ;24.576x1000000/(38400x6/3.
                             58=64358)/16 = 24 = E8H
  0060          +1   706     CONST_BAUD_HAND9600pc                   EQU     96      ;0A1H   ;24.576x1000000/(9600x6/3.5
                             8=16089)/16 = 95 = A1H               
                +1   707     
  00A3          +1   708     CONST_BAUD_HAND9600                     EQU     163     ;0A1H   ;24.576x1000000/(9600x6/3.5
                             8=16089)/16 = 95 = A1H               
                +1   709     
                +1   710     ;24.576x1000000/(38400x9.6/3.58=102972)/16=15 = f1
                +1   711     ;24.576x1000000/(9600x9.6/3.58=25743)/16=60 = c4h
                +1   712     ;24.576x1000000/(230000x6/3.58=385475)/16=4 = fch
                +1   713     
                +1   714     ;////////////////////////////////////////  Ö¸Áî¼¯ /////////////////////////////////////////
                             //////
                +1   715     ;LL C2H LH 32H
                +1   716     ;ML 62H MH 12H
                +1   717     ;HL 32H HH 12H
                +1   718             
  0001          +1   719     CONST_ACT_L                             EQU     1
  0002          +1   720     CONST_ACT_M                             EQU     2
  0003          +1   721     CONST_ACT_H                             EQU     3
                +1   722             
  0002          +1   723     CONST_ACT_V                             EQU     CONST_ACT_M
                +1   724             
  000A          +1   725     CONST_ACT_L_L                           EQU     0ah;0C2H
  0006          +1   726     CONST_ACT_L_H                           EQU     06h;032H
                +1   727             
  0006          +1   728     CONST_ACT_M_L                           EQU     06h;062H
  0000          +1   729     CONST_ACT_M_H                           EQU     00h;012H
                +1   730             
  0000          +1   731     CONST_ACT_H_L                           EQU     00h;032H
  0001          +1   732     CONST_ACT_H_H                           EQU     01h;012H
                +1   733     
                     734     
                     735     ;$include (ProCard.INC)
                +1   736     ;---¶Î¶¨Òå---
                +1   737     ?pr?ProCard?Mater               SEGMENT CODE
                +1   738     
                +1   739     ;--- extrn NConatct.asm --- 
                +1   740     EXTRN   CODE(_FUN_NContact_spio)
                +1   741     EXTRN   CODE(_FUN_NContact_Rc500TxAndRx)
                +1   742     EXTRN   CODE(_FUN_NContact_Rc500TxAndRx02)
                +1   743     EXTRN   CODE(_FUN_LIB_DELAY)
                +1   744     EXTRN   CODE(_FUN_LIB_DELAYSIMPLAY)
                +1   745     ;EXTRN  CODE(_FUN_NContact_TESTRc500TxAndRx)
                +1   746     EXTRN   CODE(_Rc500TxAndRx1001)
                +1   747     extrn   code(_Func_LCD_INIT)
                +1   748     ;EXTRN  CODE(_FUN_NContact_Rc500Tx)
                +1   749     EXTRN   CODE(_FUN_NContact_Rc500Rx)
                +1   750     ;--- extrn for test ---
                +1   751     EXTRN   CODE(_FUN_TEST_DISPLAY)
                +1   752     ;EXTRN  CODE(_TESTRc500TxAndRx)
                +1   753     
                +1   754     ;EXTRN  CODE(NContact_Rc500TxAndRx_01)
                +1   755     EXTRN   DATA(DATA_IRQEN)
                +1   756     EXTRN   DATA(DATA_RXBUF)
                +1   757     EXTRN   DATA(DATA_MFCOM)
                +1   758     EXTRN   BIT(BIT_PROF)
                +1   759     EXTRN   BIT(BIT_BUFADDR)
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    14

                +1   760     extrn   bit(BIT_ProMF)
                +1   761     EXTRN   BIT(BIT_GETRESULT)
                +1   762     EXTRN   XDATA(XDATA_TXBUF)
                +1   763     PUBLIC  _FUN_ProCard_RXPro              ; Pro¿¨½ÓÊÕÊ¾Ý
                +1   764     PUBLIC  _FUN_ProCard_TXPro              ; Pro¿¨·¢ËÍÊ¾Ý
                +1   765     PUBLIC  _FUN_ProCard_rats               ; 
                +1   766     PUBLIC  _FUN_Pro_PPS                    ; Pro¿¨PPSÃüÁî
                +1   767     PUBLIC  _FUN_ProCard_Channel            ; PROÍ¨µÀº¯Ê
                +1   768     PUBLIC  _FUN_ProCard_TXBYTE
                +1   769     ;PUBLIC _FUN_ProCard_RXPro02
                     770     
                     771             
----                 772             RSEG    ?pr?ProCard?Mater
                     773             USING   0
                     774             
                     775     ;--------------------------------------------------------------------------
                     776     ;ÃèÊö:Pro¿¨½ÓÊÕµ¥¸ö×Ö½ÚµÄÊ¾Ý(_FUN_ProCard_RXBYTE)
                     777     ;Íâ²¿²ÎÊ
                     778     ;       XXX             ---     XXX
                     779     ;ÄÚ²¿²ÎÊ:
                     780     ;·µ»ØÖµ
                     781     ;--------------------------------------------------------------------------     
0000                 782     _FUN_ProCard_RXBYTE:
                     783     
0000 C007            784             PUSH    AR7
0002 7F00            785             MOV     R7,#00H
0004 7409            786             MOV     A,#REG_RC522_FIFODataReg
0006 23              787             RL      A
0007 D2E7            788             SETB    ACC.7
0009 120000   F      789             CALL    _FUN_NContact_spio
                     790             ;---MOV A,REG_5412AD_spdat
000C D007            791             POP     AR7
000E 22              792             RET
                     793     ;--------------------------------------------------------------------------                
                                  
000F                 794     _FUN_ProCard_RXNUM:
                     795             
000F 7F00            796             MOV     R7,#00H
0011 740A            797             MOV     A,#REG_RC522_FIFOLevelReg
0013 23              798             RL      A
0014 D2E7            799             SETB    ACC.7
0016 120000   F      800             CALL    _FUN_NContact_spio
                     801             ;MOV    A,REG_5412AD_spdat      
                     802             
0019 22              803             RET     
                     804     ;--------------------------------------------------------------------------
                     805     ;ÃèÊö:Pro¿¨½ÓÊÕÊ¾Ý(_FUN_ProCard_RXPro)
                     806     ;Íâ²¿²ÎÊ
                     807     ;       R7              ---     ½ÓÊÕç·³å
                     808     ;       BIT_BUFADDR     ---     =0 ½ÓÊÕÊ¾Ýµ½ÄÚ´æ;       =1 ½ÓÊÕÊ¾Ýµ½Íâ´æ
                     809     ;       BIT_GETRESULT   ---     =1 ±íÊ¾È¡£¬È¡·µ»Ø½á¹û;  =0 ±íÊ¾²»È¡·µ»Ø½á¹û
                     810     ;ÄÚ²¿²ÎÊ:
                     811     ;       XXX
                     812     ;·µ»ØÖµ
                     813     ;       R3              ---     ½ÓÊÕµ½µÄÊ¾Ý³¤¶È
                     814     
                     815     ;--------------------------------------------------------------------------     
001A                 816     _FUN_ProCard_RXPro:     
                     817     
001A 850700          818             MOV     AR0,AR7
001D                 819     _FUN_ProCard_RXPro_j:   
001D 750029   F      820             MOV     DATA_IRQEN,#29H
0020 C000            821             PUSH    AR0
0022 120000   F      822             CALL    _FUN_NContact_Rc500Rx   ;¶ÁPRO¿¨Ç°ËùÒª×öµÄ×¼±¸¹¤×÷,·µ»Ø½ÓÊÕ³¤¶È
0025 D000            823             POP     AR0
                     824     
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    15

0027                 825     ProCard_RXPro_StartRX01:
                     826             ;~~~~~ µ÷ÓÃ²âÊÔº¯Ê ~~~~~
                     827             ;MOV    A,#33
                     828             ;JMP    _FUN_TEST_DISPLAY       
                     829             ;~~~~~~~~~~~~~~~~~~~~~~~~~      
                     830     ;       mov     a,r2
                     831     ;       xrl     a,#30
                     832     ;       jnz     xxxxx
                     833     ;       mov     a,r7
                     834     ;       CALL    _FUN_TEST_DISPLAY
                     835     ;xxxxx: 
0027 EF              836             MOV     A,R7                            ;»ñÈ¡½ÓÊÕ³¤¶È_D
0028 64FF            837             XRL     A,#0FFH
002A 7003            838             JNZ     ProCard_RXPro_StartRX
002C 020000   F      839             JMP     ProCard_RXPro_ERR
                     840     
002F                 841     ProCard_RXPro_StartRX:
002F EF              842             MOV     A,R7                            ;»ñÈ¡½ÓÊÕ³¤¶È_D
0030 6403            843             XRL     A,#03H
0032 703C            844             JNZ     ProCard_RXPro_StartRX_J
                     845     
0034 120000   F      846             CALL    _FUN_ProCard_RXBYTE
0037 64FA            847             XRL     A,#0FAh
0039 7025            848             JNZ     ProCard_RXPro_StartRX_J1
                     849             
003B 120000   F      850             CALL    _FUN_ProCard_RXBYTE             
003E 120000   F      851             CALL    _FUN_ProCard_RXBYTE             
                     852     
0041 7409            853             mov     a,#REG_RC522_FIFODataReg;09h
0043 23              854             rl      a
0044 7FFA            855             mov     r7,#0FAh
0046 120000   F      856             call    _FUN_NContact_spio
                     857     
0049 7409            858             mov     a,#REG_RC522_FIFODataReg;09h
004B 23              859             rl      a
004C 7F01            860             mov     r7,#01h
004E 120000   F      861             call    _FUN_NContact_spio
                     862     
0051 7409            863             mov     a,#REG_RC522_FIFODataReg;09h
0053 23              864             rl      a
0054 7F32            865             mov     r7,#32h
0056 120000   F      866             call    _FUN_NContact_spio
                     867     
0059 7F0C            868             mov     r7,#0ch
                     869             ;mov    r4,#0
005B 120000   F      870             call    _FUN_NContact_Rc500TxAndRx
                     871     
005E 80BD            872             jmp     _FUN_ProCard_RXPro_j
                     873     
                     874             ;--- ¶Á·µ»Ø½á¹û3·ÇFA ---
0060                 875     ProCard_RXPro_StartRX_J1:
0060 EF              876             MOV     A,R7
0061 14              877             DEC     A
0062 14              878             DEC     A
0063 FB              879             MOV     R3,A
                     880             
0064 BB7F00          881             CJNE    R3,#127,$+3
0067 4002            882             JC      ProCard_RXPro_RXRESULT_j
0069 8070            883             JMP     ProCard_RXPro_ERR
006B                 884     ProCard_RXPro_RXRESULT_j:
006B 120000   F      885             CALL    _FUN_ProCard_RXBYTE             
006E 8011            886             JMP     ProCard_RXPro_RXRESULT_j2
                     887             
                     888             ;--- ¶Á·µ»Ø½á¹û·Ç03 ---
0070                 889     ProCard_RXPro_StartRX_J:
0070 EF              890             MOV     A,R7
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    16

0071 14              891             DEC     A
0072 14              892             DEC     A
0073 FB              893             MOV     R3,A
                     894             
                     895             ;------ r3>127 ----
0074 BB7F00          896             cjne    r3,#127,$+3
0077 4002            897             jc      ProCard_RXPro_RXRESULT  
0079 8060            898             jmp     ProCard_RXPro_ERR
                     899             
007B                 900     ProCard_RXPro_RXRESULT:
007B 120000   F      901             CALL    _FUN_ProCard_RXBYTE
007E 120000   F      902             CALL    _FUN_ProCard_RXBYTE                     
                     903             
0081                 904     ProCard_RXPro_RXRESULT_j2:
0081 850304          905             MOV     AR4,AR3 
                     906             
0084                 907     ProCard_RXPro_StartLoop:
0084 C004            908             PUSH    AR4
0086 C003            909             PUSH    AR3     ;±£´æ½ÓÊÕ³¤¶È
                     910             
0088                 911     ProCard_RXPro_Loop:
0088 120000   F      912             CALL    _FUN_ProCard_RXBYTE
                     913             ;ÐèÒª¼ÓÑÓÊ±£¬²»È»Ê¾ÝÌ«³¤£¬ÓÐÊ±½ÓÊÕ²»ÍêÕû
008B 7F0A            914             MOV     R7,#10
008D DFFE            915             DJNZ    R7,$
                     916             
008F 200003   F      917             JB      BIT_BUFADDR,RXPro_Loop_ADDRMOVX
0092                 918     RXPro_Loop_ADDRMOV:
0092 F6              919             MOV     @R0,A
0093 8006            920             JMP     RXPro_Loop_ADDROVER
0095                 921     RXPro_Loop_ADDRMOVX:
                     922                     ;MOVX   @R0,A
                     923     ;       push    dph
                     924     ;       push    dpl     
0095 758301          925             MOV     DPH,#1 
0098 8882            926             MOV     DPL,R0 
009A F0              927             MOVX    @DPTR,A
                     928     ;       pop     dpl
                     929     ;       pop     dph     
009B                 930     RXPro_Loop_ADDROVER:
009B 08              931             INC     R0
009C DBEA            932             DJNZ    R3,ProCard_RXPro_Loop           
                     933                     
009E D003            934             POP     AR3
00A0 D004            935             POP     AR4
                     936     
                     937             ;FIFOLevelReg Indicate the number of bytes store in the fifo
00A2 740A            938             MOV     A,#REG_RC522_FIFOLevelReg
00A4 23              939             RL      A
00A5 D2E7            940             SETB    ACC.7
00A7 7F00            941             MOV     R7,#00h
00A9 120000   F      942             CALL    _FUN_NContact_spio
                     943             
00AC 600C            944             JZ      ProCard_RXPro_OVER
00AE FB              945             MOV     R3,A
00AF 2C              946             ADD     A,R4
00B0 FC              947             MOV     R4,A
                     948     
                     949             ;------ r3>127 ----
00B1 BC7F00          950             cjne    r4,#127,$+3
00B4 4002            951             jc      ProCard_RXPro_fhfh      
00B6 8023            952             jmp     ProCard_RXPro_ERR       
                     953             
00B8                 954     ProCard_RXPro_fhfh:
00B8 80CA            955             JMP     ProCard_RXPro_StartLoop 
                     956             
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    17

00BA                 957     ProCard_RXPro_OVER:
                     958     
                     959     ;       DEC     R0
                     960     ;       DEC     R0
                     961             
                     962     ;               ;MOVX   A,@R0
                     963     
                     964     ;       CALL    _FUN_TEST_DISPLAY
                     965     ;xxxx:
                     966     
                     967     ;       mov     a,r2
                     968     ;       xrl     a,#30
                     969     ;       jnz     xxxxx
                     970             ;mov    a,r7
                     971             ;CALL   _FUN_TEST_DISPLAY
                     972     
                     973     ;dec    r0
                     974     ;dec    r0
                     975     ;       ;MOVX   A,@R0
                     976             
                     977     ;call   _fun_test_display               
                     978     ;xxxxx: 
                     979             
                     980     
00BA 850403          981             MOV     AR3,AR4
00BD C003            982             PUSH    AR3
00BF 120000   F      983             CALL    _FUN_ProCard_CLRResult
00C2 D003            984             POP     AR3
                     985             
                     986     
                     987     
                     988     ;call   _fun_test_display       
                     989     
                     990     
                     991     
                     992             ;dec    r0
                     993             ;dec    r0
                     994             ;       ;MOVX   A,@R0
                     995     
                     996             ;clr    a
                     997             ;mov    c,BIT_GETRESULT
                     998             ;mov    acc.0,c
                     999             ;mov    a,r3
                    1000             ;call   _fun_test_display
00C4 200013   F     1001             JB      BIT_GETRESULT,ProCard_RXPro_Ret
                    1002             ;--- ·µ»Ø 61 + ³¤¶È(²»·µ½á¹û) ---
00C7 E8             1003             MOV     A,R0
00C8 C3             1004             CLR     C
00C9 9C             1005             SUBB    A,R4
                    1006             ; INC   A
00CA F8             1007             MOV     R0,A
00CB 7461           1008             MOV     A,#61H
                    1009                     ;MOVX   @R0,A
                    1010     ;       push    dph
                    1011     ;       push    dpl
                    1012     
00CD 758301         1013             MOV     DPH,#1 
00D0 8882           1014             MOV     DPL,R0 
00D2 F0             1015             MOVX    @DPTR,A
00D3 08             1016             INC     R0
00D4 EC             1017             MOV     A,R4
                    1018                     ;MOVX   @R0,A
                    1019     ;       MOV     DPH,#1 
00D5 8882           1020             MOV     DPL,R0 
00D7 F0             1021             MOVX    @DPTR,A
                    1022     ;       pop     dpl
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    18

                    1023     ;       pop     dph
00D8 7B02           1024             MOV     R3,#2
                    1025             
00DA                1026     ProCard_RXPro_Ret:      
                    1027             ;---setb        BIT_GETRESULT
00DA 22             1028             RET             
                    1029             
00DB                1030     ProCard_RXPro_ERR:
00DB 7FFF           1031             MOV     R7,#CONST_STATE_FALSE
00DD 7B00           1032             MOV     R3,#0
00DF 22             1033             RET     
                    1034             
                    1035     ;--------------------------------------------------------------------------
                    1036     ;ÃèÊö:Çå³FIFO¼°ÖÕÖ¹RC522µÄExcution(_FUN_ProCard_TXBYTE)
                    1037     ;Íâ²¿²ÎÊ
                    1038     ;       A               ---     ½«Òª·¢ËÍµÄÊ¾Ý
                    1039     ;ÄÚ²¿²ÎÊ:
                    1040     ;·µ»ØÖµ
                    1041     ;--------------------------------------------------------------------------
                    1042     
00E0                1043     _FUN_ProCard_CLRResult:
00E0 740C           1044             mov     a,#REG_RC522_ControlReg
00E2 23             1045             rl      a
00E3 D2E7           1046             setb    acc.7
00E5 7F00           1047             mov     r7,#00h
00E7 120000   F     1048             call    _FUN_NContact_spio
                    1049             ;mov    a,REG_5412AD_spdat
                    1050     
00EA D2E7           1051             setb    acc.7
00EC FF             1052             mov     r7,a
00ED 740C           1053             mov     a,#REG_RC522_ControlReg
00EF 23             1054             rl      a
00F0 120000   F     1055             call    _FUN_NContact_spio
                    1056     
                    1057             ;clear FIFO buffer
00F3 740A           1058             mov     a,#REG_RC522_FIFOLevelReg
00F5 23             1059             rl      a
00F6 7F80           1060             mov     r7,#80h
00F8 120000   F     1061             call    _FUN_NContact_spio
                    1062     
                    1063             ;stop execution
00FB 7401           1064             mov     a,#REG_RC522_CommandReg
00FD 23             1065             rl      a
00FE 7F00           1066             mov     r7,#00h
0100 120000   F     1067             call    _FUN_NContact_spio      
0103 22             1068             RET
                    1069     ;--------------------------------------------------------------------------
                    1070     ;ÃèÊö:Pro¿¨·¢ËÍµ¥¸ö×Ö½ÚµÄÊ¾Ý(_FUN_ProCard_TXBYTE)
                    1071     ;Íâ²¿²ÎÊ
                    1072     ;       A               ---     ½«Òª·¢ËÍµÄÊ¾Ý
                    1073     ;ÄÚ²¿²ÎÊ:
                    1074     ;·µ»ØÖµ
                    1075     
                    1076     ;--------------------------------------------------------------------------     
0104                1077     _FUN_ProCard_TXBYTE:
                    1078     
0104 C007           1079             PUSH    AR7
0106 FF             1080             MOV     R7,A
0107 7409           1081             MOV     A,#REG_RC522_FIFODataReg
0109 23             1082             RL      A
010A 120000   F     1083             CALL    _FUN_NContact_spio
010D D007           1084             POP     AR7
                    1085     
010F 22             1086             RET
                    1087     ;--------------------------------------------------------------------------
                    1088     ;ÃèÊö:Pro¿¨·¢ËÍÊ¾Ý(_FUN_ProCard_TXPro)
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    19

                    1089     ;¹æÔò:
                    1090     ;               ÒªÔÚ·¢ËÍÊ¾ÝÇ°¼Ó 0a/0b + 00£¬ÈçÒª·¢ËÍ0x01,0x02,0x03
                    1091     ;               ÔòÍêÕûµÄ·¢ËÍÊ¾ÝÊÇ 0a/0b + 0x00 + 0x01 + 0x02 + 0x03
                    1092     ;Íâ²¿²ÎÊ
                    1093     ;BIT_BUFADDR    ---     =0£¬·¢ËÍµÄÊÇÄÚ´æÊ¾Ý£»=1£¬·¢ËÍµÄÊÇÍâ´æÊ¾Ý
                    1094     ;R7             ---     ½«Òª·¢ËÍÊ¾ÝµÄbuf
                    1095     ;R3             ---     ·¢ËÍÊ¾ÝµÄ³¤¶È
                    1096     ;BIT_PROF       ---     Pro¿¨·¢ËÍÐòºÅ   = 0 ±íÊ¾0A ;= 1 ±íÊ¾0B
                    1097     ;ÄÚ²¿²ÎÊ:
                    1098     ;·µ»ØÖµ
                    1099     ;--------------------------------------------------------------------------     
                    1100     ;Ò»´Î×î¶àÏòç·³åÇøÐ´Èë50¸ö×Ö½Ú
                    1101     ;³¬¹50¸ö×Ö½ÚÊ±£¬ÔòÒªÐ´Èë50¸ö×Ö½Úºó£¬ÒªµÈ´ç·³åÖÐÐ¡ÓÚ25¸ö×Ö½Úºó£¬ÔÙÏòç·³åÐ´Èë<=25¸ö×Ö½Ú£¬Ö±µ½
                             ½áÊø
                    1102     ;--------------------------------------------------------------------------             
0110                1103     _FUN_ProCard_TXPro:
                    1104             ;·¢ËÍÍ·²¿Ê¾Ý
                    1105     ;PUSH AR7
                    1106     ;       mov     a,#REG_RC522_TmodeReg
                    1107     ;       rl      a
                    1108     ;       mov     r7,#82h
                    1109     ;       CALL    _FUN_NContact_spio
                    1110             
                    1111     ;       mov     a,#REG_RC522_TPrescalerReg
                    1112     ;       rl      a
                    1113     ;       mov     r7,#0a6h
                    1114     ;       call    _FUN_NContact_spio
                    1115             
                    1116     ;       mov     a,#REG_RC522_TModeReg
                    1117     ;       rl      a
                    1118     ;       mov     r7,#82h
                    1119     ;       call    _FUN_NContact_spio
                    1120     
                    1121     ;       mov     a,#REG_RC522_TmodeReg
                    1122     ;       rl      a
                    1123     ;       mov     r7,#82h
                    1124     ;       call    _FUN_NContact_spio
                    1125             
                    1126     ;       mov     a,#REG_RC522_TReloadRegL
                    1127     ;       rl      a
                    1128     ;       mov     r7,#150                         ;30;8;30;75;#155;30 1eh
                    1129     ;       call    _FUN_NContact_spio
                    1130             
                    1131     ;       mov     a,#REG_RC522_TReloadRegH
                    1132     ;       rl      a
                    1133     ;       mov     r7,#01h                         ;00h
                    1134     ;       call    _FUN_NContact_spio
                    1135     ;POP AR7
                    1136     
                    1137     
0110 740A           1138             MOV     A,#0AH
0112 A200     F     1139             MOV     C,BIT_PROF
0114 92E0           1140             MOV     ACC.0,C
0116 120000   F     1141             CALL    _FUN_ProCard_TXBYTE
0119 B200     F     1142             CPL     BIT_PROF
011B 7401           1143             mov     a,#1
011D 120000   F     1144             CALL    _FUN_ProCard_TXBYTE
                    1145             
0120 BB3600         1146             CJNE    R3,#54,$+3
0123 5004           1147             JNC     ProCard_TXPro_Len
0125 7C00           1148             MOV     R4,#0
0127 8008           1149             JMP     ProCard_TXPro_LenTX
                    1150     
0129                1151     ProCard_TXPro_Len:
0129 C3             1152             CLR     C
012A E503           1153             MOV     A,AR3
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    20

012C 9435           1154             SUBB    A,#53
012E FC             1155             MOV     R4,A
012F 7B35           1156             MOV     R3,#53
                    1157             
0131                1158     ProCard_TXPro_LenTX:
                    1159             ;·¢ËÍÖ¸ÁîÊ¾Ý
0131 850700         1160             MOV     AR0,AR7
                    1161                     
0134                1162     ProCard_TXPro_lenLOOP:
0134 200003   F     1163             JB      BIT_BUFADDR,TXPro_LOOP_ADDRMOVX
0137                1164     TXPro_LOOP_ADDRMOV:
0137 E6             1165             MOV     A,@R0
0138 8006           1166             JMP     TXPro_LOOP_ADDROVER
013A                1167     TXPro_LOOP_ADDRMOVX:
                    1168                     ;MOVX   A,@R0
                    1169     
                    1170     ;       push    dph
                    1171     ;       push    dpl
013A 758301         1172             MOV     DPH,#1
013D 8882           1173             MOV     DPL,R0
013F E0             1174             MOVX    A,@DPTR
                    1175     ;       pop     dpl
                    1176     ;       pop     dph
0140                1177     TXPro_LOOP_ADDROVER:
0140 120000   F     1178             CALL    _FUN_ProCard_TXBYTE
0143 08             1179             INC     R0
0144 DBEE           1180             DJNZ    R3,ProCard_TXPro_lenLOOP
                    1181             
0146 750029   F     1182             MOV     DATA_IRQEN,#29H
0149 7F0C           1183             MOV     R7,#0ch
                    1184             ;PUSH   AR4
014B 120000   F     1185             CALL    _FUN_NContact_Rc500TxAndRx02
                    1186             ;CALL   _FUN_NContact_Rc500TxAndRx
                    1187             ;POP    AR4
014E EC             1188             mov     a,r4
014F 7002           1189             jnz     ProCard_TXPro_TXWAIt
0151 8028           1190             jmp     ProCard_TXPro_LENOver
0153                1191     ProCard_TXPro_TXWAIT:   
0153 7F00           1192             MOV     R7,#00H
0155 740A           1193             MOV     A,#REG_RC522_FIFOLevelReg
0157 23             1194             RL      A
0158 D2E7           1195             SETB    ACC.7
015A 120000   F     1196             CALL    _FUN_NContact_spio      
                    1197     
015D B41E00         1198             CJNE    A,#30,$+3
0160 50F1           1199             JNC     ProCard_TXPro_TXWAIT
0162 850403         1200             MOV     AR3,AR4
                    1201             
0165                1202     ProCard_TXPro_lenLOOP2:
                    1203             ;ÐèÒª¼ÓÑÓÊ±£¬²»È»Ê¾ÝÌ«³¤£¬FiFoÂú³ö
0165 7F12           1204             MOV     r7,#18
0167 DFFE           1205             DJNZ    r7,$
                    1206             
0169 200003   F     1207             JB      BIT_BUFADDR,TXPro_LOOP_ADDRMOVX2
016C                1208     TXPro_LOOP_ADDRMOV2:
016C E6             1209             MOV     A,@R0
016D 8006           1210             JMP     TXPro_LOOP_ADDROVER2
016F                1211     TXPro_LOOP_ADDRMOVX2:
                    1212                     ;MOVX   A,@R0
                    1213     
                    1214     ;       push    dph
                    1215     ;       push    dpl
016F 758301         1216             MOV     DPH,#1
0172 8882           1217             MOV     DPL,R0
0174 E0             1218             MOVX    A,@DPTR
                    1219     ;       pop     dpl
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    21

                    1220     ;       pop     dph
                    1221             
0175                1222     TXPro_LOOP_ADDROVER2:
0175 120000   F     1223             CALL    _FUN_ProCard_TXBYTE
0178 08             1224             INC     R0
0179 DBEA           1225             DJNZ    R3,ProCard_TXPro_lenLOOP2
                    1226     
                    1227             ;MOV    R7,#00H
                    1228             ;MOV    A,#REG_RC522_FIFOLevelReg
                    1229             ;RL     A
                    1230             ;SETB   ACC.7
                    1231             ;CALL   _FUN_NContact_spio      
                    1232             ;call   _fun_test_display
                    1233     ;xxx:   
017B                1234     ProCard_TXPro_LENOver:
                    1235             
017B 22             1236             RET
                    1237     ;/////////////////////////////////////////////////////////
                    1238     ;       JMP     ProCard_TXPro_Len
                    1239             ;<=50¸ö×Ö½ÚµÄÖ¸Áî´¦ÀíÁ÷³Ì
                    1240     ;ProCard_TXPro_Short:
                    1241             ;·¢ËÍÖ¸ÁîÊ¾Ý
                    1242     ;       MOV     AR0,AR7
                    1243     ;ProCard_TXPro_LOOP:
                    1244     ;       JB      BIT_BUFADDR,TXPro_LOOP_ADDRMOVX
                    1245     ;TXPro_LOOP_ADDRMOV:
                    1246     ;       MOV     A,@R0
                    1247     ;       JMP     TXPro_LOOP_ADDROVER
                    1248     ;TXPro_LOOP_ADDRMOVX:
                    1249     ;               ;MOVX   A,@R0
                    1250     
                    1251     ;       NOP
                    1252     ;       NOP
                    1253     ;       NOP
                    1254     ;TXPro_LOOP_ADDROVER:
                    1255     ;       CALL    _FUN_ProCard_TXBYTE
                    1256     ;       INC     R0
                    1257     ;       DJNZ    R3,ProCard_TXPro_LOOP
                    1258     ;ProCard_TXProOVER:
                    1259     ;       RET     
                    1260     ;--------------------------------------------------------------------------     
                    1261             ;PUSH   AR7
                    1262             ;MOV    R7,#122
                    1263             ;DJNZ   R7,$
                    1264             ;POP    AR7
                    1265     ;³¬¹50¸ö×Ö½ÚµÄÖ¸Áî´¦Àí
                    1266     ;ProCard_TXPro_Len:
                    1267     ;       CLR     C
                    1268     ;       MOV     A,AR3
                    1269     ;       SUBB    A,#53
                    1270             
                    1271     ;       MOV     R4,A
                    1272     ;       MOV     R3,#53
                    1273     ;ProCard_TXPro_LenTX:
                    1274     
                    1275             ;·¢ËÍÖ¸ÁîÊ¾Ý
                    1276     ;       MOV     AR0,AR7
                    1277     ;ProCard_TXPro_lenLOOP:
                    1278     ;       MOV     A,@R0
                    1279     ;       CALL    _FUN_ProCard_TXBYTE
                    1280     ;       INC     R0
                    1281     ;       DJNZ    R3,ProCard_TXPro_lenLOOP
                    1282     ;       MOV     A,R4
                    1283     ;       JZ      ProCard_TXPro_LENOver
                    1284     ;       MOV     AR3,AR4
                    1285             ;·¢ËÍFiFoÖÐµÚÒ»²¿·ÝµÄÊ¾Ý
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    22

                    1286     ;       MOV     DATA_IRQEN,#29H                 
                    1287     ;       MOV     R7,#0CH                         
                    1288     ;       CALL    _FUN_NContact_TESTRc500TxAndRx  
                    1289             
                    1290             ;µÈ½ÖFiFoÖÐµÄÊ¾Ý<=25¸ö×Ö½Ú
                    1291     ;ProCard_TXPro_TXWAIT:
                    1292     ;       MOV     R7,#00H
                    1293     ;       MOV     A,#REG_RC522_FIFOLevelReg
                    1294     ;       RL      A
                    1295     ;       SETB    ACC.7
                    1296     ;       CALL    _FUN_NContact_spio
                    1297     ;       CJNE    A,#30,$+3
                    1298     ;       JNC     ProCard_TXPro_TXWAIT
                    1299     ;ProCard_TXPro_lenLOOP2:
                    1300     ;       MOV     A,@R0
                    1301     
                    1302     ;       MOV     R7,#1;122
                    1303     ;       DJNZ    R7,$
                    1304     
                    1305     ;       CALL    _FUN_ProCard_TXBYTE
                    1306     
                    1307     ;       INC     R0
                    1308     ;       DJNZ    R3,ProCard_TXPro_lenLOOP2
                    1309             
                    1310     ;       RET
                    1311     ;///////////////////////////////////////////////////
                    1312             
                    1313             ;MOV    A,R4
                    1314             ;CALL   _FUN_TEST_DISPLAY       
                    1315             
                    1316     ;ProCard_TXPro_PRE:
                    1317             ;CJNE   R3,#26,$+3
                    1318             ;JNC    ProCard_TXPro_dy25
                    1319     ;       MOV     R4,#0
                    1320             
                    1321             ;MOV    A,R3
                    1322             ;MOV    AR0,AR7
                    1323             ;MOV    A,@R0
                    1324             ;CALL   _FUN_TEST_DISPLAY       
                    1325     ;       JMP     ProCard_TXPro_LenTX
                    1326             
                    1327             ;´óÓÚ25Ê±
                    1328     ;ProCard_TXPro_dy25:
                    1329     ;       CLR     C
                    1330     ;       MOV     A,AR3
                    1331     ;       SUBB    A,#25
                    1332             
                    1333     ;       MOV     R4,A
                    1334     ;       MOV     R3,#25
                    1335     ;       JMP     ProCard_TXPro_LenTX
                    1336     ;ProCard_TXPro_PREWC25:         
                    1337             
                    1338     ;ProCard_TXPro_LENOver:
                    1339             
                    1340             ;MOV    A,#33
                    1341             ;CALL   _FUN_TEST_DISPLAY
                    1342     
                    1343             ;RET
                    1344             
                    1345     ;--------------------------------------------------------------------------
                    1346     ;ÃèÊö:XXX
                    1347     ;Íâ²¿²ÎÊ
                    1348     ;XXX    ---     XXX
                    1349     ;ÄÚ²¿²ÎÊ:
                    1350     ;·µ»ØÖµ
                    1351     ;--------------------------------------------------------------------------             
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    23

                    1352     ;_rats:
017C                1353     _FUN_ProCard_rats:
                    1354             
                    1355             ;mov    r7,#20
                    1356             ;call   _fun_lib_delay
                    1357             
                    1358     ;Ñ¡ÔñÓ¦´ðÇëÇó--->E0 +²ÎÊ×Ö½Ú(FSDI+CID)+CRC1+CRC2
                    1359     ;bit8~bit5-->FSDI  bit4~bit1-->CID
                    1360     ;FSDI   ¡®0¡¯   ¡®1¡¯   ¡®2¡¯   ¡®3¡¯   ¡®4¡¯   ¡®5¡¯   ¡®6¡¯   ¡®7¡¯   ¡®8¡¯   ¡®9¡¯-¡®F¡¯
                    1361     ;FSD-->Éè±¸Ö¡³¤¶È
                    1362     ;(×Ö½Ú) 16      24      32      40      48      64      96      128     256     RFU>256 
                    1363             
017C 7409           1364             MOV     A,#REG_RC522_FIFODataReg
017E 23             1365             RL      A
017F 7FE0           1366             MOV     R7,#0e0h
0181 120000   F     1367             CALL    _FUN_NContact_spio
                    1368             
0184 7409           1369             MOV     A,#REG_RC522_FIFODataReg
0186 23             1370             RL      A
                    1371             ;---MOV R7,#50h                 ;¼´64×Ö½Ú
0187 7F71           1372             MOV     R7,#71h                 ;¼´128×Ö½Ú
0189 120000   F     1373             CALL    _FUN_NContact_spio
018C C200     F     1374             CLR     BIT_BUFADDR
018E D200     F     1375             SETB    BIT_ProMF       
0190 750023   F     1376             MOV     DATA_IRQEN,#23h
0193 7D00     F     1377             MOV     R5,#DATA_RXBUF
                    1378     
                    1379             
0195 7F0C           1380             MOV     R7,#0ch
0197 120000   F     1381             CALL    _FUN_NContact_Rc500TxAndRx
                    1382     
019A BFFF03         1383             CJNE    R7,#0ffh,_rats1
019D                1384     _ratserr:
019D 7FFF           1385             MOV     R7,#0ffh
                    1386             
019F 22             1387             RET
01A0                1388     _rats1:
01A0 EF             1389             MOV     A,R7
                    1390             
01A1 60FA           1391             JZ      _ratserr
01A3                1392     _rats2:
01A3 750100   F     1393             mov     ar1,#DATA_RXBUF                 ;±£´æDATA_RXBUF
01A6                1394     _rats2_1:
                    1395     
01A6 120000   F     1396             CALL    _FUN_ProCard_RXBYTE
01A9 F7             1397             mov     @r1,a                           ;±£´æDATA_RXBUF
                    1398             ;mov    a,r7
                    1399             ;call   _fun_test_display       
01AA 0501           1400             inc     ar1                             ;±£´æDATA_RXBUF
01AC DFF8           1401             DJNZ    r7,_rats2_1
                    1402             
01AE 22             1403             RET
                    1404             
                    1405     ;///////////////////////////////////////////////////////////////////////////////////    
01AF                1406     _FUN_Pro_PPS:
                    1407     
                    1408     ;Ð­ÒéºÍ²ÎÊÑ¡ÔñÇëÇó=====·¢PPSÃüÁî--->PPSS+PPS0+PPS1+CRC1+CRC21   
01AF 7409           1409             MOV     A,#REG_RC522_FIFODataReg
01B1 23             1410             RL      A
01B2 7FD1           1411             MOV     R7,#0d1h;0d0h                   ;PPPS
01B4 120000   F     1412             CALL    _FUN_NContact_spio
                    1413             
01B7 7409           1414             MOV     A,#REG_RC522_FIFODataReg
01B9 23             1415             RL      A
                    1416             ;---MOV R7,#50h                         
01BA 7F11           1417             MOV     R7,#11h                         ;PPS0
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    24

01BC 120000   F     1418             CALL    _FUN_NContact_spio
                    1419             
01BF 7409           1420             MOV     A,#REG_RC522_FIFODataReg
01C1 23             1421             RL      A
                    1422             ;---MOV R7,#50h                 
01C2 7F0A           1423             MOV     R7,#0ah                         ;PPS1
01C4 120000   F     1424             CALL    _FUN_NContact_spio
                    1425             
01C7 C200     F     1426             CLR     BIT_BUFADDR
01C9 D200     F     1427             SETB    BIT_ProMF       
01CB 750023   F     1428             MOV     DATA_IRQEN,#23h
01CE 7D00     F     1429             MOV     R5,#DATA_RXBUF
01D0 7F0C           1430             MOV     R7,#0ch
01D2 120000   F     1431             CALL    _FUN_NContact_Rc500TxAndRx
                    1432             
01D5 BFFF03         1433             CJNE    R7,#0ffh,_rat_NContact_PPS_s1
01D8                1434     _rat_NContact_PPS_serr:
01D8 7FFF           1435             MOV     R7,#0ffh        
01DA 22             1436             RET
                    1437             
01DB                1438     _rat_NContact_PPS_s1:
01DB EF             1439             MOV     A,R7
                    1440             
01DC 60FA           1441             JZ      _rat_NContact_PPS_serr
01DE                1442     _rat_NContact_PPS_s2:
01DE 750100   F     1443             mov     ar1,#DATA_RXBUF                 ;±£´æDATA_RXBUF
                    1444     
01E1                1445     _rat_NContact_PPS_s2_1:
01E1 120000   F     1446             CALL    _FUN_ProCard_RXBYTE
01E4 F7             1447             mov     @r1,a                           ;±£´æDATA_RXBUF
01E5 0501           1448             inc     ar1     
01E7 DFF8           1449             DJNZ    r7,_rat_NContact_PPS_s2_1
                    1450             
01E9 22             1451             RET
                    1452     ;--------------------------------------------------------------------------
                    1453     ;ÃèÊö:Pro¿¨Í¨µÀ²Ù×÷º¯Ê(_FUN_ProCard_Channel)
                    1454     ;¹æÔò:
                    1455     ;               ÒªÔÚ·¢ËÍÊ¾ÝÇ°¼Ó 0a/0b + 00£¬ÈçÒª·¢ËÍ0x01,0x02,0x03
                    1456     ;               ÔòÍêÕûµÄ·¢ËÍÊ¾ÝÊÇ 0a/0b + 0x00 + 0x01 + 0x02 + 0x03
                    1457     ;Íâ²¿²ÎÊ
                    1458     ;R7             ---     ½«Òª·¢ËÍÊ¾ÝµÄbuf
                    1459     ;R5             ---     ½«Òª½ÓÊÕÊ¾ÝµÄbuf
                    1460     ;R3             ---     ·¢ËÍÊ¾ÝµÄ³¤¶È
                    1461     ;BIT_PROF       ---     Pro¿¨·¢ËÍÐòºÅ   = 0 ±íÊ¾0A ;= 1 ±íÊ¾0B
                    1462     ;BIT_GETRESULT  ---     =1 ±íÊ¾È¡£¬È¡·µ»Ø½á¹û;  =0 ±íÊ¾²»È¡·µ»Ø½á¹û
                    1463     ;ÄÚ²¿²ÎÊ:
                    1464     ;·µ»ØÖµ
                    1465     ;       ½ÓÊÕÊ¾ÝµÄ³¤¶È
                    1466     ;--------------------------------------------------------------------------     
01EA                1467     _FUN_ProCard_Channel:
                    1468     
01EA C200     F     1469             CLR     BIT_BUFADDR             ; ÄÚ´æ·¢ËÍ
01EC C005           1470             PUSH    AR5     
01EE C003           1471             PUSH    AR3                     ; 
01F0 120000   F     1472             CALL    _FUN_ProCard_TXPro      ;       
01F3 D003           1473             POP     AR3
01F5 D005           1474             POP     AR5                     ; 
                    1475     
01F7 D200     F     1476             SETB    BIT_BUFADDR             ; Íâ´æ½ÓÊÕ
01F9 850507         1477             MOV     AR7,AR5                 ; 
01FC 120000   F     1478             CALL    _FUN_ProCard_RXPro
                    1479     
                    1480             ;MOV    a,r3                                                    ;ÓÐµÄESAMÑ¡1001¿ì±È
                             PPS»ØÓ¦»¹¿ì£¬ËùÒÔÒªÔÙ²¹ÉÏÒ»Ð©ÑÓÊ±
                    1481             ;CALL   _FUN_TEST_DISPLAY       
                    1482             
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    25

                    1483             
01FF 22             1484             RET                             ;
                    1485     
                    1486             END
                             ;/////////////////////////////////////////////////////////////////////////////
                             
                             
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    26

SYMBOL TABLE LISTING
------ ----- -------


N A M E                           T Y P E  V A L U E   ATTRIBUTES

?PR?PROCARD?MATER. . . . . . . .  C SEG    0200H       REL=UNIT
ACC. . . . . . . . . . . . . . .  D ADDR   00E0H   A   
AR0. . . . . . . . . . . . . . .  D ADDR   0000H   A   
AR1. . . . . . . . . . . . . . .  D ADDR   0001H   A   
AR3. . . . . . . . . . . . . . .  D ADDR   0003H   A   
AR4. . . . . . . . . . . . . . .  D ADDR   0004H   A   
AR5. . . . . . . . . . . . . . .  D ADDR   0005H   A   
AR7. . . . . . . . . . . . . . .  D ADDR   0007H   A   
BIT_BUFADDR. . . . . . . . . . .  B ADDR   -----       EXT
BIT_GETRESULT. . . . . . . . . .  B ADDR   -----       EXT
BIT_PROF . . . . . . . . . . . .  B ADDR   -----       EXT
BIT_PROMF. . . . . . . . . . . .  B ADDR   -----       EXT
BRT. . . . . . . . . . . . . . .  N NUMB   009CH   A   
BUSY . . . . . . . . . . . . . .  B ADDR   0020H.0 A   
CCAP0H . . . . . . . . . . . . .  N NUMB   00FAH   A   
CCAP0L . . . . . . . . . . . . .  N NUMB   00EAH   A   
CCAP1H . . . . . . . . . . . . .  N NUMB   00FBH   A   
CCAP1L . . . . . . . . . . . . .  N NUMB   00EBH   A   
CCAP2H . . . . . . . . . . . . .  N NUMB   00FCH   A   
CCAP2L . . . . . . . . . . . . .  N NUMB   00ECH   A   
CCAP3H . . . . . . . . . . . . .  N NUMB   00FDH   A   
CCAP3L . . . . . . . . . . . . .  N NUMB   00EDH   A   
CCAP4H . . . . . . . . . . . . .  N NUMB   00FEH   A   
CCAP4L . . . . . . . . . . . . .  N NUMB   00EEH   A   
CCAP5H . . . . . . . . . . . . .  N NUMB   00FFH   A   
CCAP5L . . . . . . . . . . . . .  N NUMB   00EFH   A   
CCAPM0 . . . . . . . . . . . . .  N NUMB   00DAH   A   
CCAPM1 . . . . . . . . . . . . .  N NUMB   00DBH   A   
CCAPM2 . . . . . . . . . . . . .  N NUMB   00DCH   A   
CCAPM3 . . . . . . . . . . . . .  N NUMB   00DDH   A   
CCAPM4 . . . . . . . . . . . . .  N NUMB   00DEH   A   
CCAPM5 . . . . . . . . . . . . .  N NUMB   00DFH   A   
CCF0 . . . . . . . . . . . . . .  B ADDR   00D8H.0 A   
CCF1 . . . . . . . . . . . . . .  B ADDR   00D8H.1 A   
CCF2 . . . . . . . . . . . . . .  B ADDR   00D8H.2 A   
CCF3 . . . . . . . . . . . . . .  B ADDR   00D8H.3 A   
CCF4 . . . . . . . . . . . . . .  B ADDR   00D8H.4 A   
CCF5 . . . . . . . . . . . . . .  B ADDR   00D8H.5 A   
CCON . . . . . . . . . . . . . .  N NUMB   00D8H   A   
CF . . . . . . . . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . . . . . . . . .  N NUMB   00F9H   A   
CL . . . . . . . . . . . . . . .  N NUMB   00E9H   A   
CMOD . . . . . . . . . . . . . .  N NUMB   00D9H   A   
CONST_ACTIONTYPE_GETRAND . . . .  N NUMB   0002H   A   
CONST_ACTIONTYPE_GETSECURE . . .  N NUMB   0000H   A   
CONST_ACTIONTYPE_SETMMI. . . . .  N NUMB   0004H   A   
CONST_ACTIONTYPE_SETSECURE . . .  N NUMB   0001H   A   
CONST_ACTIONTYPE_TRANSFERCHANNEL  N NUMB   0003H   A   
CONST_ACT_H. . . . . . . . . . .  N NUMB   0003H   A   
CONST_ACT_H_H. . . . . . . . . .  N NUMB   0001H   A   
CONST_ACT_H_L. . . . . . . . . .  N NUMB   0000H   A   
CONST_ACT_L. . . . . . . . . . .  N NUMB   0001H   A   
CONST_ACT_L_H. . . . . . . . . .  N NUMB   0006H   A   
CONST_ACT_L_L. . . . . . . . . .  N NUMB   000AH   A   
CONST_ACT_M. . . . . . . . . . .  N NUMB   0002H   A   
CONST_ACT_M_H. . . . . . . . . .  N NUMB   0000H   A   
CONST_ACT_M_L. . . . . . . . . .  N NUMB   0006H   A   
CONST_ACT_V. . . . . . . . . . .  N NUMB   0002H   A   
CONST_BAUD_115200. . . . . . . .  N NUMB   0002H   A   
CONST_BAUD_115200PC. . . . . . .  N NUMB   0003H   A   
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    27

CONST_BAUD_230000. . . . . . . .  N NUMB   0004H   A   
CONST_BAUD_38400 . . . . . . . .  N NUMB   0001H   A   
CONST_BAUD_38400PC . . . . . . .  N NUMB   0005H   A   
CONST_BAUD_9600. . . . . . . . .  N NUMB   0000H   A   
CONST_BAUD_9600PC. . . . . . . .  N NUMB   0006H   A   
CONST_BAUD_BITFULL12 . . . . . .  N NUMB   000CH   A   
CONST_BAUD_BITFULL20 . . . . . .  N NUMB   000EH   A   
CONST_BAUD_BITFULL28 . . . . . .  N NUMB   0010H   A   
CONST_BAUD_BITFULL8. . . . . . .  N NUMB   000BH   A   
CONST_BAUD_BITHALF12 . . . . . .  N NUMB   000CH   A   
CONST_BAUD_CURRENTBITFULL. . . .  N NUMB   00B3H   A   
CONST_BAUD_CURRENTBITHALF. . . .  N NUMB   0058H   A   
CONST_BAUD_FULL115200. . . . . .  N NUMB   001DH   A   
CONST_BAUD_FULL230000. . . . . .  N NUMB   000FH   A   
CONST_BAUD_FULL38400 . . . . . .  N NUMB   005DH   A   
CONST_BAUD_FULL9600. . . . . . .  N NUMB   00B3H   A   
CONST_BAUD_HALF115200. . . . . .  N NUMB   000DH   A   
CONST_BAUD_HALF230000. . . . . .  N NUMB   0008H   A   
CONST_BAUD_HALF38400 . . . . . .  N NUMB   002DH   A   
CONST_BAUD_HALF9600. . . . . . .  N NUMB   0058H   A   
CONST_BAUD_HAND115200. . . . . .  N NUMB   00F8H   A   
CONST_BAUD_HAND115200PC. . . . .  N NUMB   00F3H   A   
CONST_BAUD_HAND230000. . . . . .  N NUMB   00FCH   A   
CONST_BAUD_HAND38400 . . . . . .  N NUMB   00E9H   A   
CONST_BAUD_HAND38400PC . . . . .  N NUMB   00D8H   A   
CONST_BAUD_HAND9600. . . . . . .  N NUMB   00A3H   A   
CONST_BAUD_HAND9600PC. . . . . .  N NUMB   0060H   A   
CONST_BLACK_H. . . . . . . . . .  N NUMB   00FFH   A   
CONST_BLACK_L. . . . . . . . . .  N NUMB   00FFH   A   
CONST_BSTLIMIT . . . . . . . . .  N NUMB   0008H   A   
CONST_BSTLIMIT02 . . . . . . . .  N NUMB   0064H   A   
CONST_CARD_CONSUME . . . . . . .  N NUMB   0016H   A   
CONST_CARD_PASS. . . . . . . . .  N NUMB   0017H   A   
CONST_CELLFILE_H . . . . . . . .  N NUMB   0000H   A   
CONST_CELLFILE_L . . . . . . . .  N NUMB   0009H   A   
CONST_DATA_VALUE1. . . . . . . .  N NUMB   000FH   A   
CONST_DATA_VALUE2. . . . . . . .  N NUMB   00DEH   A   
CONST_DSRC_ACTION. . . . . . . .  N NUMB   0007H   A   
CONST_DSRC_ACTIONTYPE. . . . . .  N NUMB   0009H   A   
CONST_DSRC_CHANNELIDICC. . . . .  N NUMB   0001H   A   
CONST_DSRC_CHANNELIDSAM. . . . .  N NUMB   0002H   A   
CONST_DSRC_CONTAIN . . . . . . .  N NUMB   000AH   A   
CONST_DSRC_DID . . . . . . . . .  N NUMB   0008H   A   
CONST_DSRC_FILDIDAPPKEY. . . . .  N NUMB   0000H   A   
CONST_DSRC_FILDIDCONSUME . . . .  N NUMB   0002H   A   
CONST_DSRC_FILDIDHOLD. . . . . .  N NUMB   0003H   A   
CONST_DSRC_FILDIDVEHICLE . . . .  N NUMB   0001H   A   
CONST_DSRC_FILL. . . . . . . . .  N NUMB   000BH   A   
CONST_DSRC_HEAD. . . . . . . . .  N NUMB   0006H   A   
CONST_DSRC_LLCCTRL . . . . . . .  N NUMB   0005H   A   
CONST_DSRC_MACCTRL . . . . . . .  N NUMB   0004H   A   
CONST_ESAMCELLFILE_H . . . . . .  N NUMB   00EFH   A   
CONST_ESAMCELLFILE_L . . . . . .  N NUMB   0007H   A   
CONST_ETC_INPUT. . . . . . . . .  N NUMB   0003H   A   
CONST_FALSH_POWERH . . . . . . .  N NUMB   0072H   A   
CONST_FALSH_POWERL . . . . . . .  N NUMB   00F7H   A   
CONST_FALSH_PREFLAG02H . . . . .  N NUMB   0072H   A   
CONST_FALSH_PREFLAG02L . . . . .  N NUMB   00F5H   A   
CONST_FALSH_PREFLAG03H . . . . .  N NUMB   0072H   A   
CONST_FALSH_PREFLAG03L . . . . .  N NUMB   00F6H   A   
CONST_FALSH_PREFLAGH . . . . . .  N NUMB   0072H   A   
CONST_FALSH_PREFLAGL . . . . . .  N NUMB   00F4H   A   
CONST_FALSH_PREFLAGLEN . . . . .  N NUMB   0001H   A   
CONST_FLAG_INPUT . . . . . . . .  N NUMB   0000H   A   
CONST_FLAG_OUTPUT. . . . . . . .  N NUMB   0001H   A   
CONST_FLASH_0002H. . . . . . . .  N NUMB   0072H   A   
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    28

CONST_FLASH_0002L. . . . . . . .  N NUMB   0058H   A   
CONST_FLASH_0002LEN. . . . . . .  N NUMB   0004H   A   
CONST_FLASH_0012H. . . . . . . .  N NUMB   0072H   A   
CONST_FLASH_0012L. . . . . . . .  N NUMB   005CH   A   
CONST_FLASH_0012LEN. . . . . . .  N NUMB   0028H   A   
CONST_FLASH_0015H. . . . . . . .  N NUMB   0072H   A   
CONST_FLASH_0015L. . . . . . . .  N NUMB   0084H   A   
CONST_FLASH_0015LEN. . . . . . .  N NUMB   002BH   A   
CONST_FLASH_0019GBLEN. . . . . .  N NUMB   002BH   A   
CONST_FLASH_0019H. . . . . . . .  N NUMB   0072H   A   
CONST_FLASH_0019L. . . . . . . .  N NUMB   00AFH   A   
CONST_FLASH_0019LEN. . . . . . .  N NUMB   003CH   A   
CONST_FLASH_BEACONIDUNIXTIMEH. .  N NUMB   0072H   A   
CONST_FLASH_BEACONIDUNIXTIMEL. .  N NUMB   00ECH   A   
CONST_FLASH_BEACONIDUNIXTIMELEN.  N NUMB   0008H   A   
CONST_FLASH_BLOCK01. . . . . . .  N NUMB   0072H   A   
CONST_FLASH_CARDTYPELEN. . . . .  N NUMB   0001H   A   
CONST_FLASH_FILELEN. . . . . . .  N NUMB   00ECH   A   
CONST_FLASH_LASTCARDH. . . . . .  N NUMB   0072H   A   
CONST_FLASH_LASTCARDL. . . . . .  N NUMB   00EBH   A   
CONST_FLASH_STARTHIGH. . . . . .  N NUMB   0072H   A   
CONST_FLASH_STARTLOW . . . . . .  N NUMB   0000H   A   
CONST_FLASH_SYS0020H . . . . . .  N NUMB   006CH   A   
CONST_FLASH_SYS0020L . . . . . .  N NUMB   0000H   A   
CONST_FLASH_SYS0020NUMH. . . . .  N NUMB   006AH   A   
CONST_FLASH_SYS0020NUML. . . . .  N NUMB   0000H   A   
CONST_FLASH_SYSINFOH . . . . . .  N NUMB   0072H   A   
CONST_FLASH_SYSINFOL . . . . . .  N NUMB   0000H   A   
CONST_FLASH_SYSINFOLEN . . . . .  N NUMB   0058H   A   
CONST_GDO2_MCSM2 . . . . . . . .  N NUMB   0002H   A   
CONST_GDO2_VALUE . . . . . . . .  N NUMB   0046H   A   
CONST_GSM_MAXNUM . . . . . . . .  N NUMB   00F0H   A   
CONST_GSM_NUM. . . . . . . . . .  N NUMB   0008H   A   
CONST_GSM_PJNUM. . . . . . . . .  N NUMB   0014H   A   
CONST_HANDSECOND . . . . . . . .  N NUMB   0015H   A   
CONST_HOLD_5823RX. . . . . . . .  N NUMB   0000H   A   
CONST_HOLD_5823TX. . . . . . . .  N NUMB   0001H   A   
CONST_INPUT_ISENABLE . . . . . .  N NUMB   0001H   A   
CONST_LHX_FLAG . . . . . . . . .  N NUMB   0002H   A   
CONST_MAX_RXNUM. . . . . . . . .  N NUMB   0005H   A   
CONST_MCU_WKCTH. . . . . . . . .  N NUMB   0008H   A   
CONST_MCU_WKCTL. . . . . . . . .  N NUMB   00FFH   A   
CONST_MF_DECREMENT . . . . . . .  N NUMB   0002H   A   
CONST_MF_INCREMENT . . . . . . .  N NUMB   0003H   A   
CONST_MF_RC500DECREMENT. . . . .  N NUMB   00C0H   A   
CONST_MF_RC500INCREMENT. . . . .  N NUMB   00C1H   A   
CONST_MF_READ. . . . . . . . . .  N NUMB   0000H   A   
CONST_MF_RESTOR. . . . . . . . .  N NUMB   0004H   A   
CONST_MF_WRITE . . . . . . . . .  N NUMB   0001H   A   
CONST_MTC_INPUT. . . . . . . . .  N NUMB   0001H   A   
CONST_PPS_115200 . . . . . . . .  N NUMB   0018H   A   
CONST_PPS_230000 . . . . . . . .  N NUMB   0096H   A   
CONST_PPS_38400. . . . . . . . .  N NUMB   0013H   A   
CONST_PPS_9600 . . . . . . . . .  N NUMB   0010H   A   
CONST_PRO_OVERTIME2S . . . . . .  N NUMB   00FAH   A   
CONST_RTCOVERFLOW. . . . . . . .  N NUMB   0090H   A   
CONST_RTC_OFF. . . . . . . . . .  N NUMB   00FFH   A   
CONST_RTC_ON . . . . . . . . . .  N NUMB   0055H   A   
CONST_SOF. . . . . . . . . . . .  N NUMB   0000H   A   
CONST_SOFTBYTESP . . . . . . . .  N NUMB   0014H   A   
CONST_SOFTFIRSTSCANTIME. . . . .  N NUMB   0010H   A   
CONST_SOFTFIRSTSCANTIMEXX. . . .  N NUMB   00FFH   A   
CONST_SOFTSECOND . . . . . . . .  N NUMB   0070H   A   
CONST_SSRC_FID . . . . . . . . .  N NUMB   000CH   A   
CONST_STATE_5823INIER. . . . . .  N NUMB   0007H   A   
CONST_STATE_5823SLEEPER. . . . .  N NUMB   0008H   A   
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    29

CONST_STATE_ACCEPTOVER . . . . .  N NUMB   0003H   A   
CONST_STATE_ACCEPTOVERLEN. . . .  N NUMB   0004H   A   
CONST_STATE_ACTCARDINVALID . . .  N NUMB   0006H   A   
CONST_STATE_ACTIVEFAIL . . . . .  N NUMB   0004H   A   
CONST_STATE_AUTHER . . . . . . .  N NUMB   0006H   A   
CONST_STATE_BASE01ANTICOLL . . .  N NUMB   001DH   A   
CONST_STATE_BASE01CONTACT. . . .  N NUMB   0015H   A   
CONST_STATE_BASE01ESAMDF01 . . .  N NUMB   0014H   A   
CONST_STATE_BASE01RATS . . . . .  N NUMB   001FH   A   
CONST_STATE_BASE01RE . . . . . .  N NUMB   001CH   A   
CONST_STATE_BASE01SEL. . . . . .  N NUMB   001EH   A   
CONST_STATE_BASE02ANTICOLL . . .  N NUMB   0019H   A   
CONST_STATE_BASE02CONTACT. . . .  N NUMB   0016H   A   
CONST_STATE_BASE02RATS . . . . .  N NUMB   001BH   A   
CONST_STATE_BASE02RE . . . . . .  N NUMB   0018H   A   
CONST_STATE_BASE02SEL. . . . . .  N NUMB   001AH   A   
CONST_STATE_BASEESAMDF01 . . . .  N NUMB   000BH   A   
CONST_STATE_BASEN01INIT. . . . .  N NUMB   0013H   A   
CONST_STATE_BASENINIT. . . . . .  N NUMB   000AH   A   
CONST_STATE_CARDPREDEAL0002. . .  N NUMB   000DH   A   
CONST_STATE_CARDPREDEAL0012. . .  N NUMB   000EH   A   
CONST_STATE_CARDPREDEAL0015. . .  N NUMB   000FH   A   
CONST_STATE_CARDPREDEAL0019. . .  N NUMB   0010H   A   
CONST_STATE_CARDPREDEAL1001. . .  N NUMB   000CH   A   
CONST_STATE_CARDPREDEAL3F00. . .  N NUMB   0011H   A   
CONST_STATE_CARDPREDEAL81. . . .  N NUMB   0012H   A   
CONST_STATE_EXMEMORYER . . . . .  N NUMB   0021H   A   
CONST_STATE_EXMEMORYER02 . . . .  N NUMB   0022H   A   
CONST_STATE_FALSE. . . . . . . .  N NUMB   00FFH   A   
CONST_STATE_GETSECURESELFILEER .  N NUMB   0009H   A   
CONST_STATE_ILLEGALACTCARD . . .  N NUMB   0005H   A   
CONST_STATE_ILLEGALINPUTCARD . .  N NUMB   0002H   A   
CONST_STATE_INPUTCARDINVALID . .  N NUMB   0003H   A   
CONST_STATE_INPUTFAIL. . . . . .  N NUMB   0001H   A   
CONST_STATE_MEMORYER . . . . . .  N NUMB   0020H   A   
CONST_STATE_RSTCPUER . . . . . .  N NUMB   0005H   A   
CONST_STATE_SERIALACCPET . . . .  N NUMB   0001H   A   
CONST_STATE_SERIALOVERTIME . . .  N NUMB   0002H   A   
CONST_STATE_TEST . . . . . . . .  N NUMB   0017H   A   
CONST_STATE_TRUE . . . . . . . .  N NUMB   0000H   A   
CONST_SYS_55 . . . . . . . . . .  N NUMB   0055H   A   
CONST_SYS_AA . . . . . . . . . .  N NUMB   00AAH   A   
CONST_SYS_OBUIDLEN . . . . . . .  N NUMB   0004H   A   
CONST_SYS_POWERONTIMER . . . . .  N NUMB   000AH   A   
CONST_SYS_PREFLAG. . . . . . . .  N NUMB   0088H   A   
CONST_SYS_RTCOVERTIME. . . . . .  N NUMB   0064H   A   
CONST_SYS_TRADECONFINE . . . . .  N NUMB   00FFH   A   
CONST_TIMEER02 . . . . . . . . .  N NUMB   0001H   A   
CONST_TIMEER03 . . . . . . . . .  N NUMB   00FEH   A   
CONST_TIMEER04 . . . . . . . . .  N NUMB   0001H   A   
CONST_VSTLIMIT . . . . . . . . .  N NUMB   00FFH   A   
CONST_WHITE_H. . . . . . . . . .  N NUMB   0000H   A   
CONST_WHITE_L. . . . . . . . . .  N NUMB   0031H   A   
CONST_WORKSTAION_0 . . . . . . .  N NUMB   0000H   A   
CONST_WORKSTAION_1 . . . . . . .  N NUMB   0001H   A   
CONST_WORKSTAION_2 . . . . . . .  N NUMB   0002H   A   
CONST_WORKSTAION_3 . . . . . . .  N NUMB   0003H   A   
CR . . . . . . . . . . . . . . .  B ADDR   00D8H.6 A   
DATA_IRQEN . . . . . . . . . . .  D ADDR   -----       EXT
DATA_MFCOM . . . . . . . . . . .  D ADDR   -----       EXT
DATA_RXBUF . . . . . . . . . . .  D ADDR   -----       EXT
DPH. . . . . . . . . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . . . . . . . . .  D ADDR   0082H   A   
EPCAI. . . . . . . . . . . . . .  B ADDR   00A8H.6 A   
EPCA_LVD . . . . . . . . . . . .  B ADDR   00A8H.6 A   
IE . . . . . . . . . . . . . . .  D ADDR   00A8H   A   
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    30

IE2. . . . . . . . . . . . . . .  N NUMB   00AFH   A   
IPH. . . . . . . . . . . . . . .  N NUMB   00B7H   A   
ISP_CONTR. . . . . . . . . . . .  N NUMB   00C7H   A   
P0 . . . . . . . . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . . . . . . . . .  N NUMB   00C0H   A   
PCA_PWM0 . . . . . . . . . . . .  N NUMB   00F2H   A   
PCA_PWM1 . . . . . . . . . . . .  N NUMB   00F3H   A   
PCA_PWM2 . . . . . . . . . . . .  N NUMB   00F4H   A   
PCA_PWM3 . . . . . . . . . . . .  N NUMB   00F5H   A   
PCA_PWM4 . . . . . . . . . . . .  N NUMB   00F6H   A   
PCA_PWM5 . . . . . . . . . . . .  N NUMB   00F7H   A   
PIN_522_MISO . . . . . . . . . .  B ADDR   00C0H.1 A   
PIN_522_MOSI . . . . . . . . . .  B ADDR   00C0H.6 A   
PIN_522_RST. . . . . . . . . . .  B ADDR   0080H.4 A   
PIN_522_SCLK . . . . . . . . . .  B ADDR   0080H.7 A   
PIN_522_SS . . . . . . . . . . .  B ADDR   0080H.6 A   
PIN_5823BK_CS. . . . . . . . . .  B ADDR   0090H.0 A   
PIN_5823BK_IRQ . . . . . . . . .  B ADDR   0090H.2 A   
PIN_5823BK_MISO. . . . . . . . .  B ADDR   0080H.0 A   
PIN_5823BK_MOSI. . . . . . . . .  B ADDR   0080H.1 A   
PIN_5823BK_SCLK. . . . . . . . .  B ADDR   00C0H.2 A   
PIN_BELL_01. . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_BELL_02. . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_BK_CE. . . . . . . . . . . .  B ADDR   0090H.1 A   
PIN_CARD_EXIST . . . . . . . . .  B ADDR   00B0H.3 A   
PIN_ESAM_RST . . . . . . . . . .  B ADDR   0080H.5 A   
PIN_ESAM_RX. . . . . . . . . . .  B ADDR   0080H.3 A   
PIN_ESAM_TX. . . . . . . . . . .  B ADDR   0080H.3 A   
PIN_ES_RST . . . . . . . . . . .  B ADDR   00A0H.6 A   
PIN_GRE. . . . . . . . . . . . .  B ADDR   00C0H.4 A   
PIN_LCD_CS . . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_LCD_DC . . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_LCD_RST. . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_LCD_SCL. . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_LCD_SDA. . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_OUTPUT_CLK . . . . . . . . .  B ADDR   00B0H.4 A   
PIN_PWRDWN . . . . . . . . . . .  B ADDR   00A0H.4 A   
PIN_PWRDWN_LCD . . . . . . . . .  B ADDR   0090H.5 A   
PIN_PWR_GSM. . . . . . . . . . .  B ADDR   00A0H.3 A   
PIN_PWR_LOWIO. . . . . . . . . .  B ADDR   0090H.5 A   
PIN_PWR_SE . . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_RED. . . . . . . . . . . . .  B ADDR   00C0H.5 A   
PIN_SE_IO1 . . . . . . . . . . .  B ADDR   00B0H.4 A   
PIN_SOFTSERIALRX . . . . . . . .  B ADDR   00B0H.0 A   
PIN_SOFTSERIALTXH. . . . . . . .  B ADDR   00B0H.1 A   
PIN_SW . . . . . . . . . . . . .  B ADDR   0090H.5 A   
PIN_UART2_RX . . . . . . . . . .  B ADDR   0090H.6 A   
PIN_UART2_TX . . . . . . . . . .  B ADDR   0090H.7 A   
PIN_UNFIX. . . . . . . . . . . .  B ADDR   00B0H.5 A   
PIN_WAVE_CHANNEL1. . . . . . . .  B ADDR   0080H.2 A   
PIN_WAVE_RX. . . . . . . . . . .  B ADDR   0080H.2 A   
PROCARD. . . . . . . . . . . . .  N NUMB   -----       
PROCARD_RXPRO_ERR. . . . . . . .  C ADDR   00DBH   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_FHFH . . . . . . .  C ADDR   00B8H   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_LOOP . . . . . . .  C ADDR   0088H   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_OVER . . . . . . .  C ADDR   00BAH   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_RET. . . . . . . .  C ADDR   00DAH   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_RXRESULT . . . . .  C ADDR   007BH   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_RXRESULT_J . . . .  C ADDR   006BH   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_RXRESULT_J2. . . .  C ADDR   0081H   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_STARTLOOP. . . . .  C ADDR   0084H   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_STARTRX. . . . . .  C ADDR   002FH   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_STARTRX01. . . . .  C ADDR   0027H   R   SEG=?PR?PROCARD?MATER
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    31

PROCARD_RXPRO_STARTRX_J. . . . .  C ADDR   0070H   R   SEG=?PR?PROCARD?MATER
PROCARD_RXPRO_STARTRX_J1 . . . .  C ADDR   0060H   R   SEG=?PR?PROCARD?MATER
PROCARD_TXPRO_LEN. . . . . . . .  C ADDR   0129H   R   SEG=?PR?PROCARD?MATER
PROCARD_TXPRO_LENLOOP. . . . . .  C ADDR   0134H   R   SEG=?PR?PROCARD?MATER
PROCARD_TXPRO_LENLOOP2 . . . . .  C ADDR   0165H   R   SEG=?PR?PROCARD?MATER
PROCARD_TXPRO_LENOVER. . . . . .  C ADDR   017BH   R   SEG=?PR?PROCARD?MATER
PROCARD_TXPRO_LENTX. . . . . . .  C ADDR   0131H   R   SEG=?PR?PROCARD?MATER
PROCARD_TXPRO_TXWAIT . . . . . .  C ADDR   0153H   R   SEG=?PR?PROCARD?MATER
READ_BURST . . . . . . . . . . .  N NUMB   00C0H   A   
REG_51_AUXR1 . . . . . . . . . .  N NUMB   00A2H   A   
REG_5412AD_AUXR. . . . . . . . .  N NUMB   008EH   A   
REG_5412AD_P0M0. . . . . . . . .  N NUMB   0094H   A   
REG_5412AD_P0M1. . . . . . . . .  N NUMB   0093H   A   
REG_5412AD_P1M0. . . . . . . . .  N NUMB   0092H   A   
REG_5412AD_P1M1. . . . . . . . .  N NUMB   0091H   A   
REG_5412AD_P2M0. . . . . . . . .  N NUMB   0096H   A   
REG_5412AD_P2M1. . . . . . . . .  N NUMB   0095H   A   
REG_5412AD_P3M0. . . . . . . . .  N NUMB   00B2H   A   
REG_5412AD_P3M1. . . . . . . . .  N NUMB   00B1H   A   
REG_5412AD_P4M0. . . . . . . . .  N NUMB   00B4H   A   
REG_5412AD_P4M1. . . . . . . . .  N NUMB   00B3H   A   
REG_5412AD_P4SW. . . . . . . . .  N NUMB   00BBH   A   
REG_5412AD_SPCTL . . . . . . . .  N NUMB   0085H   A   
REG_5412AD_SPDAT . . . . . . . .  N NUMB   0086H   A   
REG_5412AD_SPSTAT. . . . . . . .  N NUMB   0084H   A   
REG_MCU_WKCTH. . . . . . . . . .  N NUMB   00ABH   A   
REG_MCU_WKCTL. . . . . . . . . .  N NUMB   00AAH   A   
REG_RC522_BITFRAMINGREG. . . . .  N NUMB   000DH   A   
REG_RC522_COLLREG. . . . . . . .  N NUMB   000EH   A   
REG_RC522_COMIENREG. . . . . . .  N NUMB   0002H   A   
REG_RC522_COMIRQREG. . . . . . .  N NUMB   0004H   A   
REG_RC522_COMMANDREG . . . . . .  N NUMB   0001H   A   
REG_RC522_CONTROLREG . . . . . .  N NUMB   000CH   A   
REG_RC522_CRCRESULTREGH. . . . .  N NUMB   0021H   A   
REG_RC522_CRCRESULTREGL. . . . .  N NUMB   0022H   A   
REG_RC522_CWGSPREG . . . . . . .  N NUMB   0028H   A   
REG_RC522_DEMODREG . . . . . . .  N NUMB   0019H   A   
REG_RC522_DIVIENREG. . . . . . .  N NUMB   0003H   A   
REG_RC522_DIVIRQREG. . . . . . .  N NUMB   0005H   A   
REG_RC522_ERRORREG . . . . . . .  N NUMB   0006H   A   
REG_RC522_FIFODATAREG. . . . . .  N NUMB   0009H   A   
REG_RC522_FIFOLEVELREG . . . . .  N NUMB   000AH   A   
REG_RC522_GSNREG . . . . . . . .  N NUMB   0027H   A   
REG_RC522_MIFAREREG. . . . . . .  N NUMB   001CH   A   
REG_RC522_MODEREG. . . . . . . .  N NUMB   0011H   A   
REG_RC522_MODGSPREG. . . . . . .  N NUMB   0029H   A   
REG_RC522_MODWIDTHREG. . . . . .  N NUMB   0024H   A   
REG_RC522_RC522PAGE. . . . . . .  N NUMB   0000H   A   
REG_RC522_RFCFGREG . . . . . . .  N NUMB   0026H   A   
REG_RC522_RFU. . . . . . . . . .  N NUMB   000FH   A   
REG_RC522_RXMODEREG. . . . . . .  N NUMB   0013H   A   
REG_RC522_RXSELREG . . . . . . .  N NUMB   0017H   A   
REG_RC522_RXTHRESHOLDREG . . . .  N NUMB   0018H   A   
REG_RC522_SERIALSPEEDREG . . . .  N NUMB   001FH   A   
REG_RC522_STATUS1REG . . . . . .  N NUMB   0007H   A   
REG_RC522_STATUS2REG . . . . . .  N NUMB   0008H   A   
REG_RC522_TCOUNTERVALUEREGH. . .  N NUMB   002EH   A   
REG_RC522_TCOUNTERVALUEREGL. . .  N NUMB   002FH   A   
REG_RC522_TMODEREG . . . . . . .  N NUMB   002AH   A   
REG_RC522_TPRESCALERREG. . . . .  N NUMB   002BH   A   
REG_RC522_TRELOADREGH. . . . . .  N NUMB   002CH   A   
REG_RC522_TRELOADREGL. . . . . .  N NUMB   002DH   A   
REG_RC522_TXAUTOREG. . . . . . .  N NUMB   0015H   A   
REG_RC522_TXCONTROLREG . . . . .  N NUMB   0014H   A   
REG_RC522_TXMODEREG. . . . . . .  N NUMB   0012H   A   
REG_RC522_TXSELREG . . . . . . .  N NUMB   0016H   A   
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    32

REG_RC522_WATERLEVELREG. . . . .  N NUMB   000BH   A   
REG_SYS_BRT. . . . . . . . . . .  N NUMB   009CH   A   
REG_WAKECLK0 . . . . . . . . . .  N NUMB   008FH   A   
REG_WAKECLK_04 . . . . . . . . .  B ADDR   00D8H.4 A   
REG_WAKECLK_05 . . . . . . . . .  B ADDR   00D8H.5 A   
REG_WAKE_CLK0. . . . . . . . . .  N NUMB   008FH   A   
REG_WDT_CONTR. . . . . . . . . .  N NUMB   00C1H   A   
RELOAD2_CONTR. . . . . . . . . .  N NUMB   00EAH   A   
RXPRO_LOOP_ADDRMOV . . . . . . .  C ADDR   0092H   R   SEG=?PR?PROCARD?MATER
RXPRO_LOOP_ADDRMOVX. . . . . . .  C ADDR   0095H   R   SEG=?PR?PROCARD?MATER
RXPRO_LOOP_ADDROVER. . . . . . .  C ADDR   009BH   R   SEG=?PR?PROCARD?MATER
S2BUF. . . . . . . . . . . . . .  N NUMB   009BH   A   
S2CON. . . . . . . . . . . . . .  N NUMB   009AH   A   
TI_CCXXX0_ADDR . . . . . . . . .  N NUMB   0009H   A   
TI_CCXXX0_AGCCTRL0 . . . . . . .  N NUMB   001DH   A   
TI_CCXXX0_AGCCTRL1 . . . . . . .  N NUMB   001CH   A   
TI_CCXXX0_AGCCTRL2 . . . . . . .  N NUMB   001BH   A   
TI_CCXXX0_AGCTEST. . . . . . . .  N NUMB   002BH   A   
TI_CCXXX0_BSCFG. . . . . . . . .  N NUMB   001AH   A   
TI_CCXXX0_CHANNR . . . . . . . .  N NUMB   000AH   A   
TI_CCXXX0_DEVIATN. . . . . . . .  N NUMB   0015H   A   
TI_CCXXX0_FIFOTHR. . . . . . . .  N NUMB   0003H   A   
TI_CCXXX0_FOCCFG . . . . . . . .  N NUMB   0019H   A   
TI_CCXXX0_FREND0 . . . . . . . .  N NUMB   0022H   A   
TI_CCXXX0_FREND1 . . . . . . . .  N NUMB   0021H   A   
TI_CCXXX0_FREQ0. . . . . . . . .  N NUMB   000FH   A   
TI_CCXXX0_FREQ1. . . . . . . . .  N NUMB   000EH   A   
TI_CCXXX0_FREQ2. . . . . . . . .  N NUMB   000DH   A   
TI_CCXXX0_FREQEST. . . . . . . .  N NUMB   0032H   A   
TI_CCXXX0_FSCAL0 . . . . . . . .  N NUMB   0026H   A   
TI_CCXXX0_FSCAL1 . . . . . . . .  N NUMB   0025H   A   
TI_CCXXX0_FSCAL2 . . . . . . . .  N NUMB   0024H   A   
TI_CCXXX0_FSCAL3 . . . . . . . .  N NUMB   0023H   A   
TI_CCXXX0_FSCTRL0. . . . . . . .  N NUMB   000CH   A   
TI_CCXXX0_FSCTRL1. . . . . . . .  N NUMB   000BH   A   
TI_CCXXX0_FSTEST . . . . . . . .  N NUMB   0029H   A   
TI_CCXXX0_IOCFG0 . . . . . . . .  N NUMB   0002H   A   
TI_CCXXX0_IOCFG1 . . . . . . . .  N NUMB   0001H   A   
TI_CCXXX0_IOCFG2 . . . . . . . .  N NUMB   0000H   A   
TI_CCXXX0_LQI. . . . . . . . . .  N NUMB   0033H   A   
TI_CCXXX0_MARCSTATE. . . . . . .  N NUMB   0035H   A   
TI_CCXXX0_MCSM0. . . . . . . . .  N NUMB   0018H   A   
TI_CCXXX0_MCSM1. . . . . . . . .  N NUMB   0017H   A   
TI_CCXXX0_MCSM2. . . . . . . . .  N NUMB   0016H   A   
TI_CCXXX0_MDMCFG0. . . . . . . .  N NUMB   0014H   A   
TI_CCXXX0_MDMCFG1. . . . . . . .  N NUMB   0013H   A   
TI_CCXXX0_MDMCFG2. . . . . . . .  N NUMB   0012H   A   
TI_CCXXX0_MDMCFG3. . . . . . . .  N NUMB   0011H   A   
TI_CCXXX0_MDMCFG4. . . . . . . .  N NUMB   0010H   A   
TI_CCXXX0_NUM_RXBYTES. . . . . .  N NUMB   007FH   A   
TI_CCXXX0_PARTNUM. . . . . . . .  N NUMB   0030H   A   
TI_CCXXX0_PATABLE. . . . . . . .  N NUMB   003EH   A   
TI_CCXXX0_PKTCTRL0 . . . . . . .  N NUMB   0008H   A   
TI_CCXXX0_PKTCTRL1 . . . . . . .  N NUMB   0007H   A   
TI_CCXXX0_PKTLEN . . . . . . . .  N NUMB   0006H   A   
TI_CCXXX0_PKTSTATUS. . . . . . .  N NUMB   0038H   A   
TI_CCXXX0_PTEST. . . . . . . . .  N NUMB   002AH   A   
TI_CCXXX0_RCCTRL0. . . . . . . .  N NUMB   0028H   A   
TI_CCXXX0_RCCTRL1. . . . . . . .  N NUMB   0027H   A   
TI_CCXXX0_RSSI . . . . . . . . .  N NUMB   0034H   A   
TI_CCXXX0_RXBYTES. . . . . . . .  N NUMB   003BH   A   
TI_CCXXX0_RXFIFO . . . . . . . .  N NUMB   003FH   A   
TI_CCXXX0_SAFC . . . . . . . . .  N NUMB   0037H   A   
TI_CCXXX0_SCAL . . . . . . . . .  N NUMB   0033H   A   
TI_CCXXX0_SFRX . . . . . . . . .  N NUMB   003AH   A   
TI_CCXXX0_SFTX . . . . . . . . .  N NUMB   003BH   A   
A51 MACRO ASSEMBLER  PROCARD                                                              10/09/2016 12:08:01 PAGE    33

TI_CCXXX0_SIDLE. . . . . . . . .  N NUMB   0036H   A   
TI_CCXXX0_SNOP . . . . . . . . .  N NUMB   003DH   A   
TI_CCXXX0_SPWD . . . . . . . . .  N NUMB   0039H   A   
TI_CCXXX0_SRES . . . . . . . . .  N NUMB   0030H   A   
TI_CCXXX0_SRX. . . . . . . . . .  N NUMB   0034H   A   
TI_CCXXX0_STX. . . . . . . . . .  N NUMB   0035H   A   
TI_CCXXX0_SWOR . . . . . . . . .  N NUMB   0038H   A   
TI_CCXXX0_SWORRST. . . . . . . .  N NUMB   003CH   A   
TI_CCXXX0_SXOFF. . . . . . . . .  N NUMB   0032H   A   
TI_CCXXX0_SYNC0. . . . . . . . .  N NUMB   0005H   A   
TI_CCXXX0_SYNC1. . . . . . . . .  N NUMB   0004H   A   
TI_CCXXX0_TEST0. . . . . . . . .  N NUMB   002EH   A   
TI_CCXXX0_TEST1. . . . . . . . .  N NUMB   002DH   A   
TI_CCXXX0_TEST2. . . . . . . . .  N NUMB   002CH   A   
TI_CCXXX0_TXBYTES. . . . . . . .  N NUMB   003AH   A   
TI_CCXXX0_TXFIFO . . . . . . . .  N NUMB   003FH   A   
TI_CCXXX0_VCO_VC_DAC . . . . . .  N NUMB   0039H   A   
TI_CCXXX0_VERSION. . . . . . . .  N NUMB   0031H   A   
TI_CCXXX0_WORCTRL. . . . . . . .  N NUMB   0020H   A   
TI_CCXXX0_WOREVT0. . . . . . . .  N NUMB   001FH   A   
TI_CCXXX0_WOREVT1. . . . . . . .  N NUMB   001EH   A   
TI_CCXXX0_WORTIME0 . . . . . . .  N NUMB   0037H   A   
TI_CCXXX0_WORTIME1 . . . . . . .  N NUMB   0036H   A   
TXPRO_LOOP_ADDRMOV . . . . . . .  C ADDR   0137H   R   SEG=?PR?PROCARD?MATER
TXPRO_LOOP_ADDRMOV2. . . . . . .  C ADDR   016CH   R   SEG=?PR?PROCARD?MATER
TXPRO_LOOP_ADDRMOVX. . . . . . .  C ADDR   013AH   R   SEG=?PR?PROCARD?MATER
TXPRO_LOOP_ADDRMOVX2 . . . . . .  C ADDR   016FH   R   SEG=?PR?PROCARD?MATER
TXPRO_LOOP_ADDROVER. . . . . . .  C ADDR   0140H   R   SEG=?PR?PROCARD?MATER
TXPRO_LOOP_ADDROVER2 . . . . . .  C ADDR   0175H   R   SEG=?PR?PROCARD?MATER
WAKE_CLKO. . . . . . . . . . . .  N NUMB   008FH   A   
WKO_BK . . . . . . . . . . . . .  B ADDR   00B0H.2 A   
XDATA_TXBUF. . . . . . . . . . .  X ADDR   -----       EXT
_FUNC_LCD_INIT . . . . . . . . .  C ADDR   -----       EXT
_FUN_LIB_DELAY . . . . . . . . .  C ADDR   -----       EXT
_FUN_LIB_DELAYSIMPLAY. . . . . .  C ADDR   -----       EXT
_FUN_NCONTACT_RC500RX. . . . . .  C ADDR   -----       EXT
_FUN_NCONTACT_RC500TXANDRX . . .  C ADDR   -----       EXT
_FUN_NCONTACT_RC500TXANDRX02 . .  C ADDR   -----       EXT
_FUN_NCONTACT_SPIO . . . . . . .  C ADDR   -----       EXT
_FUN_PROCARD_CHANNEL . . . . . .  C ADDR   01EAH   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_CLRRESULT . . . . .  C ADDR   00E0H   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_RATS. . . . . . . .  C ADDR   017CH   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_RXBYTE. . . . . . .  C ADDR   0000H   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_RXNUM . . . . . . .  C ADDR   000FH   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_RXPRO . . . . . . .  C ADDR   001AH   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_RXPRO_J . . . . . .  C ADDR   001DH   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_TXBYTE. . . . . . .  C ADDR   0104H   R   SEG=?PR?PROCARD?MATER
_FUN_PROCARD_TXPRO . . . . . . .  C ADDR   0110H   R   SEG=?PR?PROCARD?MATER
_FUN_PRO_PPS . . . . . . . . . .  C ADDR   01AFH   R   SEG=?PR?PROCARD?MATER
_FUN_TEST_DISPLAY. . . . . . . .  C ADDR   -----       EXT
_RATS1 . . . . . . . . . . . . .  C ADDR   01A0H   R   SEG=?PR?PROCARD?MATER
_RATS2 . . . . . . . . . . . . .  C ADDR   01A3H   R   SEG=?PR?PROCARD?MATER
_RATS2_1 . . . . . . . . . . . .  C ADDR   01A6H   R   SEG=?PR?PROCARD?MATER
_RATSERR . . . . . . . . . . . .  C ADDR   019DH   R   SEG=?PR?PROCARD?MATER
_RAT_NCONTACT_PPS_S1 . . . . . .  C ADDR   01DBH   R   SEG=?PR?PROCARD?MATER
_RAT_NCONTACT_PPS_S2 . . . . . .  C ADDR   01DEH   R   SEG=?PR?PROCARD?MATER
_RAT_NCONTACT_PPS_S2_1 . . . . .  C ADDR   01E1H   R   SEG=?PR?PROCARD?MATER
_RAT_NCONTACT_PPS_SERR . . . . .  C ADDR   01D8H   R   SEG=?PR?PROCARD?MATER
_RC500TXANDRX1001. . . . . . . .  C ADDR   -----       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)

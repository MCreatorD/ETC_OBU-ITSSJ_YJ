;--- 段定义---
?pr?OBUMAIN?tf0_timer_1		SEGMENT CODE
?pr?OBUMAIN?Mater		SEGMENT CODE
?dt?OBUMAIN?dataVarD		SEGMENT	DATA
?ba?OBUMAIN?BitD		SEGMENT	DATA	BitAddressable
?dt?OBUMAIN?dataD		SEGMENT	DATA
?idt?OBUMAIN?idataD		SEGMENT	IDATA
?xdt?OBUMAIN?xdataD		SEGMENT	XDATA
?co?OBUMAIN?STR			SEGMENT	CODE
;?dt?OBUMAIN?dataDv		SEGMENT	DATA

;--- 常量定义---
;0 - 31												工作区
;32 - 47											位可寻址
;30 - 7F											数据绶冲区
;请注意以下从CONST_LEN_WORKBUF到CONST_LEN_TXBUF因51编译的问题和程序的需求,在common.inc中重复定义
;所以要改要一起改
CONST_LEN_WORKBUF1		EQU	8							;工作区1大小
CONST_LEN_WORKBUF2		EQU	0;8							;工作区2大小
CONST_LEN_WORKBUF		EQU	CONST_LEN_WORKBUF1+CONST_LEN_WORKBUF2			;工作区总大小8
CONST_LEN_VARBUF		EQU	32-CONST_LEN_WORKBUF					;内存变量区24+8
CONST_LEN_BITBUF		EQU	6;5;4							;位可寻址空间大小6+32
CONST_LEN_RXBUF			EQU	128 							;读绶冲大小 38起
CONST_LEN_RXBUFPRE		EQU	128-CONST_LEN_WORKBUF-CONST_LEN_VARBUF-CONST_LEN_BITBUF	;读绶冲块1大小128+38
CONST_LEN_RXBUFEND		EQU	CONST_LEN_RXBUF-CONST_LEN_RXBUFPRE			;读绶冲块2大小2,是为了CRC1 CRC2166+2
CONST_LEN_RXCRC			EQU	2							;在HDLC接收时,要加了CRC的长度
CONST_LEN_POWUP			EQU	1							;168+1
CONST_LEN_STACK			EQU	128 - CONST_LEN_RXBUFEND - CONST_LEN_RXCRC - CONST_LEN_POWUP	;堆栈绶冲大小, 256-169=87


;XDATA
CONST_LEN_TXBUF			EQU	128 							;发送绶冲大小,是为了CRC1 CRC2
CONST_LEN_TXCRC			EQU	2
CON_LEN_BUFLEN			EQU	256 - CONST_LEN_TXBUF - CONST_LEN_TXCRC - 1		;2010-05-16

;--- 内外存地址定义 ---
	RSEG	?dt?OBUMAIN?dataVarD
DATA_WORKBUF2:			DS	CONST_LEN_WORKBUF2
DATA_VER:			DS	CONST_LEN_VARBUF
DATA_VARBAUDHALF		EQU	DATA_VER						;1 BYTE 波特率	代码见common.inc定义)
DATA_VARBAUDFULL		EQU	DATA_VARBAUDHALF + 1					;1 BYTE 波特率	代码见common.inc定义)
Money				EQU	DATA_VARBAUDFULL + 1					;4 BYTE
DATA_DSRCTXLEN			EQU	MONEY + 4						;1 BYTE 用于记录DSRC发送长度，以便在重发时使用
DATA_DSRCRXLEN			EQU	DATA_DSRCTXLEN + 1					;1 BYTE 用于记录DSRC接收长度，以便在重发时使用
DATA_DATAP			EQU	DATA_DSRCRXLEN + 1					;1 BYTE 用于内存指针
DATA_XDATAP			EQU	DATA_DATAP + 1						;1 BYTE 用于外存指针
DATA_OBUID			EQU	DATA_XDATAP + 1						;4 OBUID
;DATA_CARDTYPE			EQU	DATA_OBUID + 4						;1 BYTE 卡类型，=23表示记账卡，=22表示通行卡
;DATA_IRQEN			EQU	DATA_CARDTYPE + 1					;1 BYTE 中断使能
DATA_IRQEN			EQU	DATA_OBUID + 4						;1 BYTE 中断使能
DATA_CardNO			EQU	DATA_IRQEN + 1						;5 BYTE 非接触卡号
DATA_CMDTYPE			EQU	DATA_CardNO + 5						;1 BYTE
DATA_MFCOM			EQU	DATA_CMDTYPE + 1					;1 BYTE
DATA_NCONTACTTYPE		EQU	DATA_MFCOM + 1						;1 BYTE 非接触卡类型(Pro 或 MF)
DATA_PowerONTimer		EQU	DATA_NCONTACTTYPE + 1					;1 BYTE 上电定时器溢出次数，上限由CONST_SYS_PowerONTimer值决定
	
	RSEG	?ba?OBUMAIN?BitD
BITDBUF01:			DS	1							;位空间
BIT_BUFADDR			BIT	BITDBUF01.7						;表示当前操作的存储区,=0内存;=1外存
BIT_SERIALOVERTIMERX		BIT	BITDBUF01.6						;软串口等待接收是否有时间,限制=0没有限制;=1有时间限制
BIT_VERIFY			BIT	BITDBUF01.5						;串口收发是否要加验位,=0不要，=1要
BIT_HARDFLAG			BIT	BITDBUF01.4						;硬串口接收完成标记=1完成;=0未完成接收(平时为0)
BIT_CDJH			BIT	BITDBUF01.3						;=0表示没有拆过；=1表示已拆过
BIT_FIRSTTX			BIT	BITDBUF01.2						;硬串口发送第一个字节标记=0表示还没发送第一个字节，=1表示已发送
BIT_T0T1			BIT	BITDBUF01.1						;当前卡片协议=1表示T1;	=0表示T0协议;
;(借用BIT_T0T1)
BIT_TMP				BIT	BITDBUF01.1
BIT_9600			BIT	BITDBUF01.0						;=1当前波特率是9600;=0当前波特率不是9600

BITDBUF02:			DS	1							;位空间
BIT_CHANNELFLAG			BIT	BITDBUF02.7						;= 1表示当前使用信道1,  =0 表示当前使用信道0
;BIT_HDLC_BST_FIRST		BIT	BITDBUF02.6						;记录HDLC上一次的电平状态
BIT_ESAMICC			BIT	BITDBUF02.5						;当前操作接触卡的类型=1表示用户卡;=0表示ESAM
BIT_SERFIRBYTE			BIT	BITDBUF02.4						;当前是否正在检索串口第一个字节=1表示是;=0表示不是
BIT_N				BIT	BITDBUF02.3						;DSRC接收到的N位
BIT_INSERTCARD			BIT	BITDBUF02.2						;=1表示当前OBU插卡;=0表示当前OBU没插卡;
BIT_ISFRX			BIT	BITDBUF02.1						;=0表示串口第一个字节接收   ;1表示第一个字节不接收	
BIT_ISRXNB			BIT	BITDBUF02.0						;=1 表示未收到过非广播地址 =0 表示已经收到过非广播地址

BITDBUF03:			DS	1
BIT_ACCESS			BIT	BITDBUF03.7						; 记录非广播地址中 'ACTION.request'第三位 ‘accessCredentials’的值
BIT_KEY				BIT	BITDBUF03.6						; 记录非广播地址中 'fill'第7位 ‘keyedForEncrypt’的值
BIT_SETMMI			BIT	BITDBUF03.5						; =0表没有收到过SetMMI,=1SetMMI
BIT_ESAM			BIT	BITDBUF03.4						; =1表示有ESAM =0 表示没有ESAM卡
BIT_ESAMErr			BIT	BITDBUF03.3						;=0表示不显示，=1表示要显示
BIT_GETRESULT			BIT	BITDBUF03.2						; =1表示取T0时，取返回结果，=0表示不取返回结果
BIT_ProMF			BIT	BITDBUF03.1						; =1 表示是pro卡，=0表示，MF卡
BIT_ERR_flag			BIT	BITDBUF03.0

BITDBUF04:			DS	1
BIT_PROF			BIT	BITDBUF04.7						; Pro卡发送序号
BIT_ISContact			BIT	BITDBUF04.6						; 上一次及本次插卡类型，=1是接触卡=0是非接触卡
BIT_GetSecure			BIT	BITDBUF04.5						; =1表示收到GetSecure指令，=0表示没有收到GetSecure
BIT_BST				BIT	BITDBUF04.4						; =1表示收到过bst,=0表示没有收到过bst
;BIT_ContactIssue		BIT	BITDBUF04.3						; 发行开始标记	=0，没有接收发行信息，=1接收到发行信息
BIT_HaveRecordCellID		BIT	BITDBUF04.3						;0表示还没有记录CELLID，=1表示已经记录CELLID
BIT_rstype			BIT	BITDBUF04.2						; CPU卡复位时，是否有BCC；=1 表示有；=0 表示没有
BIT_RXSerialBaud		BIT	BITDBUF04.1						; 是否收到过复位波特率=0没有;=1表示有
BIT_gbICCInfo			BIT	BITDBUF04.0

BITDBUF05:			DS	1
BIT_privateInfo			BIT	BITDBUF05.7
BIT_CD				BIT	BITDBUF05.6						;=0表示未被拆动，=1 被拆动
BIT_ACTIVECARD			BIT	BITDBUF05.5						;=0 非拆动激活;=1 拆动激活
BIT_ESAMOK			BIT	BITDBUF05.4						;=0 ESAM实际操作不成功 ;= ESAM实际操作不成功

BIT_BJPRE			BIT	BITDBUF05.3						;=0 表示北京卡没有预读;=1表示北京卡有预读
BIT_BJ1219			BIT	BITDBUF05.2						;=0 表示北京卡预读0012;=1 表示北京卡预读0019
BIT_InsertEr			BIT	BITDBUF05.1						;=0车牌相符	=1车牌不符
BIT_CD_sw			BIT	BITDBUF05.0						;=0表示未被拆动，=1 被拆动

BITDBUF06:			DS	1
BIT_PPS				BIT	BITDBUF06.7						;=0 没做PPS，=1做过pps
BIT_MMITIRMSTART		BIT	BITDBUF06.6						;=0 没启动 =1启动
BIT_esamtran			BIT	BITDBUF06.5						;=1 使用过esam通道;=0 使用过esam通道

BIT_Cellinfo			BIT	BITDBUF06.4
;BIT_CKXT			BIT	BITDBUF06.4						;=0 相同，=1 不相同

BIT_Sel1001			BIT	BITDBUF06.3						;=0没有选过1001目录，=1表示选过1001目录

BIT_5823RX_flag			BIT	BITDBUF06.2						;=0表示未接收;=1表示已接收
BIT_INITCard			BIT	BITDBUF06.1
BIT_USEROK			BIT	BITDBUF06.0						;=1 用户卡预读成功;;=0 用户卡预读失败;




	RSEG	?dt?OBUMAIN?dataD
DATA_RXBUF:			DS	CONST_LEN_RXBUFPRE					;读绶冲块1
DATA_RXBUFCPUSTART		EQU	DATA_RXBUF + 3	
	
	RSEG	?idt?OBUMAIN?idataD
IDATA_RXBUFTWOBLOCK:		DS	CONST_LEN_RXBUFEND					;读绶冲块2
IDATA_RXCRC:			DS	CONST_LEN_RXCRC						;CRC
IDATA_POWUP:			DS	CONST_LEN_POWUP						;上电标志
IDATA_STACK:			DS	CONST_LEN_STACK						;堆栈空间

; 外存定义
	RSEG	?xdt?OBUMAIN?xdataD
XDATA_TXBUF:			DS	CONST_LEN_TXBUF						; 发送绶冲
IDATA_TXCRC:			DS	CONST_LEN_TXCRC						; CRC
XDATA_BUF:			DS	CON_LEN_BUFLEN						; 
XDATA_TFTINIT_FLAG:		DS	1							; TFT_LCD 是否初始化标志

;===============================================================================================
XDATA_VARSTART			EQU	XDATA_TXBUF + CONST_LEN_TXBUF + CONST_LEN_TXCRC
XDATA_BeaconID			EQU	XDATA_VARSTART						;4 Byte  天线ID
XDATA_UnixTime			EQU	XDATA_BeaconID + 4					;4 Byte  unix time
XDATA_NUM			EQU	XDATA_UnixTime + 4					;1 Byte 测试用，看OBU重发次数
XDATA_SOFTFIRSTSCANTIME		EQU	XDATA_NUM + 1						;1 Byte串口搜索最大时间
XDATA_SoftSerialP		EQU	XDATA_SOFTFIRSTSCANTIME + 1				;1 Byte 用于软口串口接收程序记录启始地址
XDATA_FIX			EQU	XDATA_SoftSerialP + 1					;1 Byte 拆卡位
; XDATA_SysParam			EQU	XDATA_FIX + 1						;1 减记数标记[ 暂时存放减记数的次数，如果OBU从未拆动过，则为FFH ]
XDATA_IssueRSCTL		EQU	XDATA_FIX + 1						;有线发行序号
XDATA_IssueCMD			EQU	XDATA_IssueRSCTL + 1					;有线发行命令字
XDATA_HighBaud			EQU	XDATA_IssueCMD + 1					; 用户卡复位返回的第三个字节
XDATA_VSTNUM			EQU	XDATA_HighBaud + 1					; 发送VST的个数
XDATA_RAND			EQU	XDATA_VSTNUM + 1					; 用于随机延时
XDATA_Power			EQU	XDATA_RAND + 1						; 3 个字节，用于记录电量
; XDATA_VSTNUM
; DATA_WK			EQU	XDATA_Power + 3						;
XDATA_SETMMI			EQU	XDATA_Power + 3						; 表示收到setmmi
XDATA_BSTNUM			EQU	XDATA_SETMMI + 1					; 保留
XDATA_SC			EQU	XDATA_BSTNUM + 1					; 保留
	
XDATA_RTCTime			EQU	XDATA_SC + 1						; 
XDATA_RTCMode			EQU	XDATA_RTCTime + 1					; 
XDATA_TOTALNUMH			EQU	XDATA_RTCMode + 1
XDATA_TOTALNUML			EQU	XDATA_TOTALNUMH + 1
;XDATA_GSMMode			EQU	XDATA_RTCMode + 1					; 
XDATA_SP			EQU	XDATA_TOTALNUML + 1	
XDATA_54			EQU	XDATA_SP + 1	
XDATA_433rxnum			EQU	XDATA_54 + 1	
XDATA_setmminum			EQU	XDATA_433rxnum + 1
;XDATA_CL			EQU	xdata_setmminum + 1
XDATA_LastBeaconID		EQU	XDATA_setmminum + 1
XDATA_LoadCellToUser		EQU	XDATA_LastBeaconID+8					;=0表示 从ESAM卡导出数据到用户卡成功
XDATA_VSTDELAY			EQU	XDATA_LoadCellToUser+1					;当前随机延时豪秒数
XDATA_CELLID			EQU	XDATA_VSTDELAY+1					;CELL ID
XDATA_HOLD			EQU	XDATA_CELLID + 2

;===============================================================================================
;--- 输入定义 ---
;--- CC1101 ---
EXTRN	CODE(_Fun_GSM_RTCEn)
EXTRN	CODE(_FUN_CC1101_CZ)
EXTRN	CODE(_FUN_CC1101_RVWR02)
EXTRN	CODE(_FUN_CC1101_RX)                          
EXTRN 	CODE(_FUN_CC1101_RESET)			;复位
EXTRN 	CODE(_FUN_CC1101_INIT)			;初始化 CC1101
EXTRN 	CODE(_FUN_CC1101_SetWakeUpTime)		;初始化1101唤醒时间
EXTRN 	CODE(_FUN_CC1101_RVOn)			;打开接收	
EXTRN 	CODE(_FUN_CC1101_RVOff)			;关闭接收
EXTRN 	CODE(_FUN_CC1101_RVWR)			;回读
EXTRN 	CODE(_FUN_CC1101_Idle)			;设置当前为空闲状态
EXTRN 	CODE(_FUN_CC1101_WakeUP)		;设置当前为唤醒状态
EXTRN 	CODE(_FUN_CC1101_spioSoftRXCC1101RXCC1101)
;extrn	code(_FUN_CC1101_spioSingleSoft)

;--- GSM ---
extrn	code(STR_chang)
EXTRN	CODE(STR_GSM_VotaLow)
EXTRN	CODE(STR_GSM_RRing)
EXTRN	CODE(_FUN_GSM_Insert)
EXTRN	CODE(_FUN_GSM_GetOffset)
EXTRN	CODE(_FUN_GSM_RTCON)
EXTRN	CODE(_FUN_GSM_RTCOFF)
	
;--- LIB ---
EXTRN	CODE(_FUN_LIB_1MSDELAYC)
;extrn	CODE(_FUN_LIB_1MSDELAYC)
EXTRN	CODE(_FUN_LIB_PowerPer)
EXTRN	CODE(_FUN_LIB_RANDDELAY)
extrn	code(_FUN_LIB_RAND)
EXTRN	CODE(_FUN_LIB_DELAY)									;延时函数1
EXTRN	CODE(_FUN_LIB_DELAYSIMPLAY)								
	
;EXTRN	CODE(_getrsuadcrc)									;计算CRC	
EXTRN	CODE(_FUN_LIB_BEEP)									;响铃指令
EXTRN	CODE(_FUN_LIB_XDATATODATA)								;复制数据从外存到内存
EXTRN	CODE(_FUN_LIB_DATATOXDATA)								;复制数据从内存到外存
EXTRN	CODE(_FUN_LIB_FLASHTODATA)								;复制数据从FLASH到内存(FALSH 数据定义需为 长度 + 数据)
EXTRN	CODE(_FUN_LIB_FLASHTOXDATA)								;复制数据从FLASH到外存(FALSH 数据定义需为 长度 + 数据)
EXTRN	CODE(_FUN_LIB_CompareTime)
;EXTRN	CODE(_FUN_LIB_POWERDOWN)
EXTRN	CODE(_FUN_LIB_FLASHTODATAEX)
EXTRN	CODE(_FUN_LIB_PowerADD)
EXTRN	CODE(_FUN_LIB_ESAMErr)

;--- Serial ---
EXTRN	CODE(_FUN_SERIAL_AudioTXSOFT)
EXTRN	CODE(_FUN_SERIAL_TXSOFT)								;软串口发送数据
EXTRN	CODE(_FUN_SERIAL_RXSOFT)								;软串口接收数据
EXTRN	CODE(_FUN_SERIAL_RXTXINTERRUPT)								;硬串口发送接收中断处理程序
EXTRN	CODE(_FUN_SERIAL_INIT)									;串口相关寄存器初始化
EXTRN	CODE(_FUN_SERIAL_TXHARD)								;硬串口发送数据
EXTRN	CODE(_FUN_SERIAL_RXHARD)	
EXTRN	CODE(_FUN_SERIAL_RXSOFTRST)								;硬串口接收数据

;--- CPU CARD ---
EXTRN	CODE(_FUN_Contact_INIT)									;初始化CPU卡
EXTRN	CODE(_FUN_Contact_Channel0)								;T0卡操作函数
EXTRN	CODE(_FUN_Contact_Channel1)								;T1卡操作函数
EXTRN	CODE(_FUN_Contact_PPS)									;PPS[设置指令]
EXTRN	CODE(_FUN_Contact_CHANGEBAUD)
EXTRN	CODE(_FUN_Contact_Channel)								;卡操作[软发送，硬接收])

;--- HDLC ---
EXTRN	CODE(_FUN_HDLC_ISSleepMod)
EXTRN	CODE(_FUN_HDLC_CLOSECLR)
EXTRN	CODE(_FUN_HDLC_RXSetMMI)
EXTRN	CODE(_FUN_HDLC_Frexiaodui)
EXTRN	CODE(_Enter_Sleep_Mode)
EXTRN	CODE(_FUN_HDLC_CheckReg9To18)
;EXTRN	CODE(_FUN_HDLC_5822Init)
;---EXTRN	CODE(_FUN_HDLC_RXSetMMI)
EXTRN	CODE(_FUN_HDLC_RX)									;HDLC接收函数
;EXTRN	CODE(_FUN_HDLC_RXForBST)
EXTRN	CODE(_FUN_HDLC_TX)									;HDLC发送函数
EXTRN	CODE(_FUN_HDLC_5830Init)
EXTRN	CODE(_FUN_HDLC_CHANGECHANNEL)

;--- GSM ---
EXTRN	CODE(GSM_SerialINTRX_RXRight)
EXTRN	CODE(STR_GSM_SRR)
EXTRN	CODE(_Fun_GSM_GetCellIDEN)
;EXTRN	CODE(_Fun_GSM_GetCellID)
;-----BK5822-----------
;EXTRN	CODE(_AutoASKReg)
;EXTRN	CODE(_Enter_TX_Carrier_Mode)
;EXTRN	CODE(_Enter_Sleep_Mode)
;EXTRN	CODE(_TXDIOpin)
;EXTRN	CODE(_Enter_Receive_Mode)

;EXTRN	CODE(_AutoASKReg_read)
;EXTRN	CODE(_AutoASKReg_uppower)
EXTRN	CODE(Rx_En)
;EXTRN	CODE(_Enable_Wake_Up)
;EXTRN	CODE(_BK5822_RST)	;复位BK5822 寄存器
;EXTRN	CODE(_BK5822_RXTX)	;R7=0 进入接收模式	R7=1 进入发送模式

;--- LCD ---
EXTRN	CODE(_Func_LCD_Display)
EXTRN	CODE(STR_HV02)
EXTRN	CODE(STR_LOWVo)
EXTRN	CODE(STR_NOXCARD)
EXTRN	CODE(_dspmoney)
EXTRN	CODE(_Func_LCD_INIT)
EXTRN	CODE(_FUN_LCD_DisplayExMoney)
EXTRN	CODE(_dspERRNUM)
EXTRN	CODE(_FUN_LCD_DisplayExChina)
EXTRN	CODE(STR_LoGCard)
EXTRN	CODE(STR_VHDif)
EXTRN	CODE(STR_IsNotSC)
EXTRN	CODE(STR_ActiveOK)
EXTRN	CODE(STR_ActiveFail)
EXTRN	CODE(STR_InputOk)
EXTRN	CODE(STR_InputFail)
EXTRN	CODE(STR_IllegalInputCard)
EXTRN	CODE(STR_InputCardInvalid)
EXTRN	CODE(STR_IllegalACTCard)
EXTRN	CODE(STR_ACTCardInvalid)
EXTRN	CODE(STR_AlreadyWRIn)
EXTRN	CODE(STR_RXCardEr)
EXTRN	CODE(STR_SetMMIEr)
EXTRN	CODE(STR_ReWrOK)
	
;EXTRN	CODE(_COLOR_Func_LCD_Display)
;EXTRN	CODE(_COLOR256_Func_LCD_Display)
	
EXTRN	CODE(_FUN_LCD_ICON)
EXTRN	CODE(STR_SET)
EXTRN	CODE(STR_NOCARD)
EXTRN	CODE(STR_ERROR)
EXTRN	CODE(STR_PASS)
EXTRN	CODE(STR_LOWV)
EXTRN	CODE(STR_UNFIX)
EXTRN	CODE(STR_INFLAG)
EXTRN	CODE(STR_CLR)
EXTRN	CODE(STR_ErrCARD)
EXTRN	CODE(STR_MoveCARD)
EXTRN	CODE(STR_CPBF)

EXTRN	CODE(STR_ICON_BJ)
EXTRN	CODE(STR_COLOR_1)
EXTRN	CODE(STR_COLOR256_1)
EXTRN	CODE(STR_COLOR256_2)
;EXTRN	CODE(STR_card_miss)
;EXTRN	CODE(STR_card1_miss)
;EXTRN	CODE(STR_COLOR_1)
;EXTRN	CODE(STR_card_miss)
;EXTRN	CODE(_COLOR_Func_LCD_Display)
;--- FALSH ---
EXTRN	CODE(_rdflash)										;读Flash到内存
EXTRN	CODE(_rdflashxr)									;读Flash到外存
EXTRN	CODE(_wrflash)										;写Flash到内存
EXTRN	CODE(_wrflashxr)									;写Flash到外存
EXTRN	CODE(_eraseflash)									;擦除Flash

;--- DSRC ---
EXTRN	CODE(_FUN_DSRC_VST)
;EXTRN	CODE(_FUN_DSRC_GetSecure)
;EXTRN	CODE(_FUN_DSRC_SetSecure)
;EXTRN	CODE(_FUN_DSRC_GetRand)
;EXTRN	CODE(_FUN_DSRC_TransferChannel)
;EXTRN	CODE(_FUN_DSRC_SetMMI)
EXTRN	CODE(_FUN_DSRC_NSpecial)
	
;--- CardAPP ---
EXTRN	CODE(_FUN_CARDAPP_ReadBinary02)
EXTRN	CODE(FUN_LCD_HVTransfer)
EXTRN	CODE(_FUN_CARDAPP_SelectFile)								;选目录或文件
EXTRN	CODE(_FUN_CARDAPP_ReadBinary)								;读二进制文件
EXTRN	CODE(_FUN_CARDAPP_GetBalance)
EXTRN	CODE(_FUN_CARDAPP_ReadRecord)
EXTRN	CODE(_FUN_CARDAPP_CardChannel)
EXTRN	CODE(_FUN_CARDAPP_DECCounter)
EXTRN	CODE(_FUN_CARDAPP_ACTIVEOBU)
EXTRN	CODE(_FUN_CARDAPP_GDFXOBU)
EXTRN	CODE(_FUN_CARDAPP_ISInOrACT)
	
;--- NContact ---
EXTRN	CODE(_FUN_NContact_Rc500Rst)
EXTRN	CODE(_FUN_NContact_Rc500Config)
EXTRN	CODE(_FUN_NContact_Rc500Request)
EXTRN	CODE(_FUN_NContact_Rc500AntiColl)
EXTRN	CODE(_FUN_NContact_Rc500Select)
	
;--- PRO ---
EXTRN	CODE(_FUN_ProCard_rats)
EXTRN   CODE(_FUN_Pro_PPS)
EXTRN   CODE(_FUN_NContact_Rc500_PPS_Config)
	
;--- Contact Issue ---
EXTRN	CODE(_FUN_ContactIssue_INITDown)
EXTRN	CODE(_FUN_ContactIssue_INIT02)
EXTRN	CODE(_FUN_ContactIssue_INIT)			;	发行初始化
EXTRN	CODE(_FUN_ContactIssue_Release)
EXTRN	CODE(_FUN_ContactIssue_RXBST)			;	发行_接收BST
EXTRN	CODE(_FUN_ContactIssue_RX)			;	接收发行信息（从PC）
EXTRN	CODE(_FUN_ContactIssue_TX)			;	发送发行回应信息（到PC）		 	发送发行回应信息（到PC）
	
;--- Audio ---
EXTRN	CODE(_Fun_GSM_Audio)
EXTRN	CODE(STR_GSM_Input)
EXTRN	CODE(STR_GSM_Output)
	
;--- test ---
EXTRN	CODE(TEST_SerialTX03_issue)
EXTRN	CODE(_FUN_TEST_SerialTX03)
EXTRN	CODE(TEST_5823_Loop)
EXTRN	CODE(_FUN_TEST_RED)
extrn	code(_FUN_TEST_DISPLAY02)
EXTRN	CODE(_FUN_TEST_GSMTX)
EXTRN	CODE(_FUN_TEST_Master)
EXTRN	CODE(_FUN_TEST_DISPLAY)
extrn	code(_FUN_TEST_checkrtcmode)
;EXTRN	CODE(STR_FileInfo)
;EXTRN	CODE(_rxfromrsu)
EXTRN	CODE(_FUN_TEST_BEEP)
EXTRN	CODE(_FUN_TESTCARDAPP_SelectFile)
EXTRN	CODE(_FUN_MF_Channel)
extrn	code(_FUN_CARDAPP_UpdateBinary)
;--- GSM ---
EXTRN	CODE(_FUN_GSM_SerialINTRX)
extrn	code(_Power_Up)
extrn	code(Tx_Carrier_En)
;EXTRN	CODE(_rxfromrsu_bit_lp1_42)
;---输出定义---
;PUBLIC	xdata_flag
;PUBLIC	rxing
;CODE
;PUBLIC	BIT_RTC_TMP
;PUBLIC	BIT_CKXT
PUBLIC	OBUMAIN_MASTER_MAINSleep
PUBLIC	BIT_Cellinfo
;PUBLIC	BIT_SysRST
PUBLIC	SLEEP
public	XDATA_433rxnum
public	XDATA_54
PUBLIC	BIT_5823RX_flag
PUBLIC	AP_start
;PUBLIC	_FUN_OBUMain_PWRLowDis
;PUBLIC	OBUMAIN_MASTER_MAINSleep
PUBLIC	BIT_PPS
;PUBLIC	_FUN_OBUMain_PPS
PUBLIC	_FUN_OBUMAIN_INITSYS
PUBLIC	_Fun_OBUmain_SysUNSleep
PUBLIC	XDATA_RTCMode
PUBLIC	start_user
;PUBLIC	AP_START
PUBLIC	_FUN_OBUMAIN_BASEINIT
PUBLIC	CONST_LEN_RXBUF
PUBLIC	CONST_LEN_TXBUF,DATA_OBUID
	
;DATA	
;PUBLIC	DATA_VARTMP1
PUBLIC	XDATA_TOTALNUMH
PUBLIC	XDATA_TOTALNUML
PUBLIC	DATA_VARBAUDHALF
PUBLIC	DATA_VARBAUDFULL
PUBLIC	DATA_RXBUF
PUBLIC	MONEY
PUBLIC	DATA_DSRCTXLEN
PUBLIC	DATA_DSRCRXLEN
PUBLIC	DATA_DATAP
PUBLIC	DATA_XDATAP
PUBLIC	DATA_IRQEN
PUBLIC	DATA_CardNO
PUBLIC	DATA_CMDTYPE
PUBLIC	DATA_MFCOM
PUBLIC	DATA_PowerONTimer
PUBLIC	XDATA_Power
	
;XDATA
PUBLIC	XDATA_RAND
PUBLIC	XDATA_TXBUF
	
PUBLIC  XDATA_TFTINIT_FLAG
	
PUBLIC	XDATA_BeaconID
PUBLIC	XDATA_UnixTime
;PUBLIC	XDATA_TXBUFCPUSTART
PUBLIC	XDATA_NUM
PUBLIC	XDATA_SOFTFIRSTSCANTIME
PUBLIC	XDATA_SOFTSERIALP
PUBLIC	XDATA_FIX
PUBLIC	XDATA_IssueRSCTL		;有线发行序号
PUBLIC	XDATA_IssueCMD			;有线发行命令字
PUBLIC	XDATA_HighBaud
PUBLIC	XDATA_HOLD
PUBLIC	XDATA_CELLID
;PUBLIC	XDATA_SYSPARAM
	
;BIT
PUBLIC	BIT_ESAMOK
PUBLIC	BIT_BUFADDR
PUBLIC	BIT_SERIALOVERTIMERX
PUBLIC	BIT_VERIFY
PUBLIC	BIT_HARDFLAG
;PUBLIC	BIT_HDLC_BST_FIRST
PUBLIC	BIT_CHANNELFLAG
PUBLIC	BIT_FIRSTTX
;PUBLIC	BIT_LASTF
PUBLIC	BIT_T0T1
PUBLIC	BIT_TMP
PUBLIC	BIT_9600
;PUBLIC	BIT_HDLCLASTD
PUBLIC	BIT_ESAMICC
PUBLIC	BIT_SERFIRBYTE
PUBLIC	BIT_INSERTCARD
PUBLIC	BIT_ISFRX
PUBLIC	BIT_ACCESS
PUBLIC	BIT_KEY
PUBLIC	BIT_N
PUBLIC	BIT_SETMMI
PUBLIC	BIT_GETRESULT
PUBLIC	BIT_proMF
PUBLIC	BIT_ERR_flag
PUBLIC	BIT_PROF
PUBLIC	BIT_ISContact
PUBLIC	BIT_BST
	
;PUBLIC	BIT_ContactIssue
PUBLIC	BIT_rstype
PUBLIC	BIT_RXSerialBaud
PUBLIC	BIT_privateInfo
PUBLIC	BIT_gbICCInfo
PUBLIC	BIT_CD
PUBLIC	BIT_BJ1219
PUBLIC	BIT_ESAMERR
;String	
PUBLIC	STR_SYS_OBUID,OBUMAIN_MASTER_MEMORYCLR
PUBLIC	XDATA_RTCTime
PUBLIC	BIT_HaveRecordCellID
	
;////////////////////////////////////////////////////////////////////////////////////////
	cseg at 2fh			; 2FH	;30H
STR_SYS_OBUID:				; OBUID
	DB	04H,01H,0a1H,0FFH,0FFH	; 
					; 
	RSEG	?co?OBUMAIN?STR		; 
;/////////////////////////////FOR TEST//////////////////////////////////////////////////////	
;STR_DSRC_VST2:		;VST基本组成
;	DB	00eH			;长度
;	DB	001H,0FEH,0FEH,0FEH	;MAC地址
;	DB	0C0H			;MAC控制域
;	DB	003H			;LLC控制域
	
;	DB	091H			;字段字头
;	DB	0D0H
;	DB	000H
;	DB	001H
;	DB	0C1H
;	DB	001H
;	DB	0FFH
;	DB	027H
;///////////////////////////////////////////////////////////////////////////////////////////////////////////
;指令类型	扇区号	块号	"A"/"B"(41H|42H)	密钥	UUU
STR_ReadBlock01:
	DB	0AH		
	DB	000H,000H,001H,041H,0A0H,0A1H,0A2H,0A3H,0A4H,0A5H
STR_ReadBlock04:
	DB	0AH
	DB	000H,000H,004H,041H,080H,008H,090H,009H,0A0H,00AH	
STR_ReadBlock10:
	DB	0AH
	DB	000H,000H,010H,041H,0A0H,0A1H,0A2H,0A3H,0A4H,0A5H
	
STR_DSRC_SELDF:		;VST基本组成
	DB	005H			;长度
	DB	000h,0a4h,000h,000h,002h
	
STR_DSRC_DF:		;VST基本组成
	DB	002H			;长度
	DB	0dfh,001h 
	
STR_CARDAPP_time:
	db	4
	db	00,00,00,02
	
STR_CARDAPP_time02:
	db	4
	db	00,00,01,01
str_cmdup:
	;db	6ah
;	db	6ah
;	db	00h,001h,002h,003h,004h,005h,006h,007h,008h,009h,00Ah,00Bh,00Ch,00Dh,00Eh,00Fh
;	db	00h,001h,002h,003h,004h,005h,006h,007h,008h,009h,00Ah,00Bh,00Ch,00Dh,00Eh,00Fh		
;	db	00h,001h,002h,003h,004h,005h,006h,007h,008h,009h,00Ah,00Bh,00Ch,00Dh,00Eh,00Fh	
;	db	00h,001h,002h,003h,004h,005h,006h,007h,008h,009h,00Ah,00Bh,00Ch,00Dh,00Eh,00Fh	
;	db	00h,001h,002h,003h,004h,005h,006h,007h,008h,009h,00Ah,00Bh,00Ch,00Dh,00Eh,00Fh	
;	db	00h,001h,002h,003h,004h,005h,006h,007h,008h,009h,00Ah,00Bh,00Ch,00Dh,00Eh,00Fh	
;	db	00h,001h,002h,003h,004h,005h,006h,007h,008h,00Bh
	
